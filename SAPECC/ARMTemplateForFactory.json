{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SAPECC"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"AzureSqlDatabase3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase3'"
		},
		"Office365_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'Office365'"
		},
		"RestService1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService1'"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://Azure-Vault-Dev.vault.azure.net/"
		},
		"Office365_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "vivek02@smrt.com.sg"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://surveybot.io"
		},
		"RestService1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vivek02"
		},
		"SAPECC_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"SAPECC_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vivek02"
		},
		"SAPECC_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "myerpabapdev.smrt.com.sg"
		},
		"SAPECC_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"SAPED1_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"SAPED1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vivek02"
		},
		"SAPED1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "myerpabapdev.smrt.com.sg"
		},
		"SAPED1_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BLOB_to_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BLOB to SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['responses_started_at']"
										},
										"sink": {
											"name": "Started_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses_completed_at']"
										},
										"sink": {
											"name": "Completed_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses_id']"
										},
										"sink": {
											"name": "GUID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['respondent_id']"
										},
										"sink": {
											"name": "Emp_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['respondent_name']"
										},
										"sink": {
											"name": "Emp_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['respondent_first_name']"
										},
										"sink": {
											"name": "First_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['respondent_last_name']"
										},
										"sink": {
											"name": "Last_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['answers_question_id']"
										},
										"sink": {
											"name": "Question_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['answers_question_text']"
										},
										"sink": {
											"name": "Question_text",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['answers_content']"
										},
										"sink": {
											"name": "Answer",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HPTEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Health_Test",
				"activities": [
					{
						"name": "dataflow1_copy2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1_copy2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"HealthData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1_copy2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health BOT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Rest Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['question_id']"
										},
										"sink": {
											"name": "Question_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['question_text']"
										},
										"sink": {
											"name": "Question_text",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['content']"
										},
										"sink": {
											"name": "Answer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['started_at']"
										},
										"sink": {
											"name": "Started_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['completed_at']"
										},
										"sink": {
											"name": "Completed_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['id']"
										},
										"sink": {
											"name": "GUID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['respondent']['id']"
										},
										"sink": {
											"name": "Emp_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['respondent']['name']"
										},
										"sink": {
											"name": "Emp_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['respondent']['first_name']"
										},
										"sink": {
											"name": "First_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['respondent']['last_name']"
										},
										"sink": {
											"name": "Last_name",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['responses'][0]['answers']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health Data Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Health Data",
						"description": "Health Data Pipeline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[Health_sto_proc]",
								"sqlWriterTableType": "TypHealth",
								"storedProcedureTableTypeParameterName": "Health"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tID",
											"type": "Guid"
										},
										"sink": {
											"name": "tID",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "tWorkplaceID",
											"type": "String"
										},
										"sink": {
											"name": "tWorkplaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tReadDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "tReadDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "tReadTime",
											"type": "TimeSpan"
										},
										"sink": {
											"name": "tReadtime",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "tTemperature",
											"type": "Decimal"
										},
										"sink": {
											"name": "tTemperature",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "tSymptoms",
											"type": "String"
										},
										"sink": {
											"name": "tSymptoms",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tRisks",
											"type": "String"
										},
										"sink": {
											"name": "tRisks",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tSeenDoc",
											"type": "String"
										},
										"sink": {
											"name": "tSeenDoc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tCreateDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "tCreateDateTime",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "WORKATO_HEALTH",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BOT_ANALYSIS_HEALTH",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"Datetime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WORKATO_HEALTH')]",
				"[concat(variables('factoryId'), '/datasets/BOT_ANALYSIS_HEALTH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health Data_Flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"HealthData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDMS O365 Pipelines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IDMS & o365 Data Pipeline",
				"activities": [
					{
						"name": "IDMS O365 Pipeline",
						"description": "IDMS O365 Pipeline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "restapi/Health And Travel/o365 Error Logs"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UserName",
											"type": "String"
										},
										"sink": {
											"name": "UserName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DisplayName",
											"type": "String"
										},
										"sink": {
											"name": "DisplayName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmployeeId",
											"type": "String"
										},
										"sink": {
											"name": "EmployeeId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsExecutiveEmployee",
											"type": "String"
										},
										"sink": {
											"name": "IsExecEmp",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmailId",
											"type": "String"
										},
										"sink": {
											"name": "EmailId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TelephoneNumber",
											"type": "String"
										},
										"sink": {
											"name": "TelNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HomephoneNumber",
											"type": "String"
										},
										"sink": {
											"name": "HomePhNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PostalCode",
											"type": "String"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PostalAddress",
											"type": "String"
										},
										"sink": {
											"name": "PostalAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TerminationDate",
											"type": "String"
										},
										"sink": {
											"name": "TerminationDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "IsActive",
											"type": "String"
										},
										"sink": {
											"name": "IsActive",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "String"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CostCenter",
											"type": "String"
										},
										"sink": {
											"name": "CostCenter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DepartmentName",
											"type": "String"
										},
										"sink": {
											"name": "DeptName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DivisionName",
											"type": "String"
										},
										"sink": {
											"name": "DivName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SectionName",
											"type": "String"
										},
										"sink": {
											"name": "SectName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PositionName",
											"type": "String"
										},
										"sink": {
											"name": "PostionName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmployeeSubArea",
											"type": "String"
										},
										"sink": {
											"name": "EESubArea",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EESubGroupName",
											"type": "String"
										},
										"sink": {
											"name": "EESubGrpName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BranchName",
											"type": "String"
										},
										"sink": {
											"name": "BranchName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UnitName",
											"type": "String"
										},
										"sink": {
											"name": "UnitName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WP.Full Name",
											"type": "String"
										},
										"sink": {
											"name": "WPFullName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WP.Email",
											"type": "String"
										},
										"sink": {
											"name": "WPEmail",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkLocationDescription",
											"type": "String"
										},
										"sink": {
											"name": "WrkLocDesc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Manager.DisplayName",
											"type": "String"
										},
										"sink": {
											"name": "MgrDispName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Manager.EmailId",
											"type": "String"
										},
										"sink": {
											"name": "MgrEmailId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supervisor.DisplayName",
											"type": "String"
										},
										"sink": {
											"name": "SupDispName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supervisor.EmailId",
											"type": "String"
										},
										"sink": {
											"name": "SupEmailId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EEGroup Description",
											"type": "String"
										},
										"sink": {
											"name": "EEGroupDesc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BU",
											"type": "String"
										},
										"sink": {
											"name": "BU",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "IDMS_Blob_Storage",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "IDMS_o365",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/IDMS_Blob_Storage')]",
				"[concat(variables('factoryId'), '/datasets/IDMS_o365')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDMS_Dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IDMS Data flow",
				"activities": [
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST_to_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('Upperlimit'),50)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set Lower Limit",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Lowerlimit",
										"value": {
											"value": "@variables('Upperlimit')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Upper Limit",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Upperlimit",
										"value": {
											"value": "@string(add(int(variables('Lowerlimit')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Lower Limit",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"quoteAllText": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestResource1",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@variables('Lowerlimit')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Json1",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							],
							"timeout": "0.00:20:00"
						}
					}
				],
				"variables": {
					"Lowerlimit": {
						"type": "String",
						"defaultValue": "0"
					},
					"Upperlimit": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP Extraction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAP P&S Extraction",
				"activities": [
					{
						"name": "SAP PS Extraction",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "EXTRACTION_DATE > '@{activity('Lookup1').output.firstRow.WatermarkValue}'",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"rfcTableFields": "ASTTX,AUART,AUFNR,BDMNG,BDTER,BLDAT,BWART,CHARG,CONSIGN,CPUDT,CREATED_DATE,CREATED_TIME,DFULL,DIFOT,DISPO,DOCUSR,ENMNG,ERDAT,FTRMI,KOSTL,LGORT,MAKTX,MANDT,MATNR,MBLNR,MCAB,MEINS,MENGE,MVGFREQ,NAMTX,NDAYS,ONHAND,ONHAND2,ONHAND3,ONTIME,QDATU,RELEA,RSNUM,RSPOS,TANUM,TSOH,UDATE,UDEPT,USNAM,WEMPF,WERKS,XLOEK,XWAOK,EXTRACTION_DATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[sapUpsertReservation]",
								"sqlWriterTableType": "TypRes2",
								"storedProcedureTableTypeParameterName": "Reservation",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RSNUM",
											"type": "String"
										},
										"sink": {
											"name": "Reservation Number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RSPOS",
											"type": "String"
										},
										"sink": {
											"name": "Reservation Item",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USNAM",
											"type": "String"
										},
										"sink": {
											"name": "User name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BWART",
											"type": "String"
										},
										"sink": {
											"name": "Movement Type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BDTER",
											"type": "String"
										},
										"sink": {
											"name": "Requirement Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CPUDT",
											"type": "String"
										},
										"sink": {
											"name": "Account Doc Creation Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MBLNR",
											"type": "String"
										},
										"sink": {
											"name": "Material Document",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AUFNR",
											"type": "String"
										},
										"sink": {
											"name": "Order Number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MATNR",
											"type": "String"
										},
										"sink": {
											"name": "Material",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MEINS",
											"type": "String"
										},
										"sink": {
											"name": "Unit Of Measure",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MENGE",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "WEMPF",
											"type": "String"
										},
										"sink": {
											"name": "Goods Recipient",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MAKTX",
											"type": "String"
										},
										"sink": {
											"name": "Material Desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BLDAT",
											"type": "String"
										},
										"sink": {
											"name": "Document Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DOCUSR",
											"type": "String"
										},
										"sink": {
											"name": "Document User",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UDEPT",
											"type": "String"
										},
										"sink": {
											"name": "Department",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WERKS",
											"type": "String"
										},
										"sink": {
											"name": "Plant",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NAMTX",
											"type": "String"
										},
										"sink": {
											"name": "Full name of Person",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TANUM",
											"type": "String"
										},
										"sink": {
											"name": "TO Doc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QDATU",
											"type": "String"
										},
										"sink": {
											"name": "TO Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NDAYS",
											"type": "Int32"
										},
										"sink": {
											"name": "No Days",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "BDMNG",
											"type": "Decimal"
										},
										"sink": {
											"name": "MR Qty",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ENMNG",
											"type": "Decimal"
										},
										"sink": {
											"name": "Final Issued Qty",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ONHAND",
											"type": "Decimal"
										},
										"sink": {
											"name": "SOH Batch",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "DFULL",
											"type": "String"
										},
										"sink": {
											"name": "Delivery in Full",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ONTIME",
											"type": "String"
										},
										"sink": {
											"name": "Delivery ontime",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DIFOT",
											"type": "String"
										},
										"sink": {
											"name": "DIFOT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "KOSTL",
											"type": "String"
										},
										"sink": {
											"name": "Cost Center",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "XLOEK",
											"type": "String"
										},
										"sink": {
											"name": "Item deleted",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "XWAOK",
											"type": "String"
										},
										"sink": {
											"name": "Mvt allowed",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LGORT",
											"type": "String"
										},
										"sink": {
											"name": "SLoc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CHARG",
											"type": "String"
										},
										"sink": {
											"name": "Batch",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AUART",
											"type": "String"
										},
										"sink": {
											"name": "Order type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ERDAT",
											"type": "String"
										},
										"sink": {
											"name": "Created Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ASTTX",
											"type": "String"
										},
										"sink": {
											"name": "User status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RELEA",
											"type": "String"
										},
										"sink": {
											"name": "Release",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FTRMI",
											"type": "String"
										},
										"sink": {
											"name": "Release date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UDATE",
											"type": "String"
										},
										"sink": {
											"name": "Unblock date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MVGFREQ",
											"type": "String"
										},
										"sink": {
											"name": "Moving Freq",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ONHAND2",
											"type": "Decimal"
										},
										"sink": {
											"name": "SOH SLoc",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "CONSIGN",
											"type": "Decimal"
										},
										"sink": {
											"name": "Consignment Stock",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "DISPO",
											"type": "String"
										},
										"sink": {
											"name": "MRP Controller",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MCAB",
											"type": "Decimal"
										},
										"sink": {
											"name": "MCAB",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TSOH",
											"type": "Decimal"
										},
										"sink": {
											"name": "SOH Plant",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ONHAND3",
											"type": "Decimal"
										},
										"sink": {
											"name": "SOH Company",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "CREATED_DATE",
											"type": "String"
										},
										"sink": {
											"name": "CREATED_DATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATED_TIME",
											"type": "String"
										},
										"sink": {
											"name": "CREATED_TIME",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SapTableResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SapTableResource1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP Incremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAP Incremental Load d",
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"HealthData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP data copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAP data copy",
				"activities": [
					{
						"name": "Copy SAP Data",
						"description": "SAP Data Provisioning",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SapTableResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SapTableResource1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_ECC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAP ECC",
				"activities": [
					{
						"name": "Copy_zlxx",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "EKKO"
							},
							{
								"name": "Destination",
								"value": "[[dbo].[ekko]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rowCount": 1000,
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "",
								"rfcTableFields": "ABGRU,ABSGR,ADDNR,ADRNR,AEDAT,ANGDT,ANGNR,AUREL_ALLOW,AUSNR,AUTLF,BEDAT,BNDDT,BSAKZ,BSART,BSTYP,BUDG_TYPE,BUKRS,BWBDT,CHECK_TYPE,CONTRACT_ALLOW,CON_DISTR_LEV,CON_OTB_REQ,CON_PREBOOK_LEV,DELPER_ALLOW,DESCRIPTION,DPAMT,DPDAT,DPPCT,DPTYP,EBELN,EINDT_ALLOW,EKGRP,EKGRP_ALLOW,EKORG,EQ_EINDT,EQ_WERKS,ERNAM,EXNUM,FIXPO,FIXPO_ALLOW,FORCE_CNT,FORCE_ID,FRGGR,FRGKE,FRGRL,FRGSX,FRGZU,GWLDT,HANDOVERLOC,HIERARCHY_EXISTS,IHRAN,IHREZ,INCO1,INCO2,KALSM,KDATB,KDATE,KEY_ID,KEY_ID_ALLOW,KNUMV,KONNR,KORNR,KTWRT,KUFIX,KUNNR,LANDS,LBLIF,LEGAL_CONTRACT,LIFNR,LIFRE,LLIEF,LOEKZ,LOGSY,LPHIS,LPONR,LTSNR_ALLOW,MANDT,MEMORY,MEMORYTYPE,MSR_ID,OTB_COND_TYPE,OTB_CURR,OTB_LEVEL,OTB_REASON,OTB_RES_VALUE,OTB_SPEC_VALUE,OTB_STATUS,OTB_VALUE,PINCR,POHF_TYPE,PROCSTAT,PSTYP_ALLOW,REASON_CODE,RELEASE_DATE,RELOC_ID,RELOC_SEQ_ID,RESWK,RETPC,RETTP,REVNO,RLWRT,SCMPROC,SHIPCOND,SOURCE_LOGSYS,SPRAS,SPR_RSN_PROFILE,STAFO,STAKO,STATU,STCEG,STCEG_L,SUBMI,TELF1,THRESHOLD_EXISTS,UNSEZ,UPINC,VERKF,VSART,VZSKZ,WAERS,WEAKT,WERKS_ALLOW,WKURS,ZBD1P,ZBD1T,ZBD2P,ZBD2T,ZBD3T,ZTERM",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EBELN",
											"type": "String"
										},
										"sink": {
											"name": "ebeln",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BUKRS",
											"type": "String"
										},
										"sink": {
											"name": "Company_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BSTYP",
											"type": "String"
										},
										"sink": {
											"name": "Purchasing_Document_Category",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BSART",
											"type": "String"
										},
										"sink": {
											"name": "Purchasing_Document_Type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BSAKZ",
											"type": "String"
										},
										"sink": {
											"name": "Control_indicator",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LOEKZ",
											"type": "String"
										},
										"sink": {
											"name": "Deletion_Indicator",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "STATU",
											"type": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AEDAT",
											"type": "String"
										},
										"sink": {
											"name": "Created_on",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ERNAM",
											"type": "String"
										},
										"sink": {
											"name": "created_by",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EKORG",
											"type": "String"
										},
										"sink": {
											"name": "Purchasing_Org",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EKGRP",
											"type": "String"
										},
										"sink": {
											"name": "Purchasing_Grp",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WAERS",
											"type": "String"
										},
										"sink": {
											"name": "Currency_Key",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RLWRT",
											"type": "Decimal"
										},
										"sink": {
											"name": "Total_Value_at_release",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_zlx",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_zlx",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_zlx')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_zlx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Send Email')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Send Email",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "IDMS_Blob_Storage",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-09.southeastasia.logic.azure.com:443/workflows/3713947e21834d359c94cdea99b72ffa/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=kwXFghPWbwv1zf0cjx6MLveuskmkIuhHSqPGbr50_nE",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\": \"PIPELINE RUN FINISHED\",\n \"message\": \"PIPELINE FINISHED RUNNING SUCCESSFULLY\",\n \"color\": \"Green\",\n \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n \"pipelineName\": \"@{pipeline().Pipeline}\",\n \"pipelineRunId\": \"@{pipeline().RunId}\",\n \"time\": \"@{convertTimeZone(utcnow(), 'UTC', 'Singapore Standard Time')}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Send Error Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-09.southeastasia.logic.azure.com:443/workflows/3713947e21834d359c94cdea99b72ffa/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=kwXFghPWbwv1zf0cjx6MLveuskmkIuhHSqPGbr50_nE",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\": \"PIPELINE RUN FAILED\",\n \"message\": \"@{activity('Copy data1').error.message}\",\n \"color\": \"Red\",\n \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n \"pipelineName\": \"@{pipeline().Pipeline}\",\n \"pipelineRunId\": \"@{pipeline().RunId}\",\n \"time\": \"@{convertTimeZone(utcnow(), 'UTC', 'Singapore Standard Time')}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/IDMS_Blob_Storage')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Travel Data Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Travel Data Pipeline",
				"activities": [
					{
						"name": "Travel Data",
						"description": "Travel Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[Travel_sto_proc]",
								"sqlWriterTableType": "TypTravel",
								"storedProcedureTableTypeParameterName": "Travel"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tTravelID",
											"type": "Guid"
										},
										"sink": {
											"name": "tTravelID",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "tWorkplaceID",
											"type": "String"
										},
										"sink": {
											"name": "tWorkplaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tTravelStatus",
											"type": "String"
										},
										"sink": {
											"name": "tTravelStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tTravelDestination",
											"type": "String"
										},
										"sink": {
											"name": "tTravelDestination",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tTravelStartDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "tTravelStartDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "tTravelEndDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "tTravelEndDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "tTravelRisk",
											"type": "String"
										},
										"sink": {
											"name": "tTravelRisk",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tTravelQuarantine",
											"type": "String"
										},
										"sink": {
											"name": "tTravelQuarantine",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tCreateDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "tCreateDateTime",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "WORK_ATO_TRAVEL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BOT_ANALYSIS_TRAVEL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WORK_ATO_TRAVEL')]",
				"[concat(variables('factoryId'), '/datasets/BOT_ANALYSIS_TRAVEL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "REST API to BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['stats']['showing']"
										},
										"sink": {
											"path": "$['stats']['showing']"
										}
									},
									{
										"source": {
											"path": "$['stats']['total']"
										},
										"sink": {
											"path": "$['stats']['total']"
										}
									},
									{
										"source": {
											"path": "$['stats']['completed']"
										},
										"sink": {
											"path": "$['stats']['completed']"
										}
									},
									{
										"source": {
											"path": "$['stats']['incomplete']"
										},
										"sink": {
											"path": "$['stats']['incomplete']"
										}
									},
									{
										"source": {
											"path": "$['questions'][0]['id']"
										},
										"sink": {
											"path": "$['questions_id']"
										}
									},
									{
										"source": {
											"path": "$['questions'][0]['question_type']"
										},
										"sink": {
											"path": "$['questions_question_type']"
										}
									},
									{
										"source": {
											"path": "$['questions'][0]['question_text']"
										},
										"sink": {
											"path": "$['questions_question_text']"
										}
									},
									{
										"source": {
											"path": "$['questions'][0]['question_position']"
										},
										"sink": {
											"path": "$['questions_question_position']"
										}
									},
									{
										"source": {
											"path": "[['completed']"
										},
										"sink": {
											"path": "$['responses_completed']"
										}
									},
									{
										"source": {
											"path": "[['started_at']"
										},
										"sink": {
											"path": "$['responses_started_at']"
										}
									},
									{
										"source": {
											"path": "[['completed_at']"
										},
										"sink": {
											"path": "$['responses_completed_at']"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"path": "$['responses_id']"
										}
									},
									{
										"source": {
											"path": "[['respondent']['id']"
										},
										"sink": {
											"path": "$['respondent_id']"
										}
									},
									{
										"source": {
											"path": "[['respondent']['name']"
										},
										"sink": {
											"path": "$['respondent_name']"
										}
									},
									{
										"source": {
											"path": "[['respondent']['first_name']"
										},
										"sink": {
											"path": "$['respondent_first_name']"
										}
									},
									{
										"source": {
											"path": "[['respondent']['last_name']"
										},
										"sink": {
											"path": "$['respondent_last_name']"
										}
									},
									{
										"source": {
											"path": "[['answers'][0]['question_id']"
										},
										"sink": {
											"path": "$['answers_question_id']"
										}
									},
									{
										"source": {
											"path": "[['answers'][0]['question_text']"
										},
										"sink": {
											"path": "$['answers_question_text']"
										}
									},
									{
										"source": {
											"path": "[['answers'][0]['content']"
										},
										"sink": {
											"path": "$['answers_content']"
										}
									}
								],
								"collectionReference": "$['responses']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {
									"url": "3"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"url": {
						"type": "string",
						"defaultValue": "/url"
					}
				},
				"variables": {
					"Lowerlimit": {
						"type": "String",
						"defaultValue": "0"
					},
					"Upperlimit": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Reservation Number",
						"type": "nchar"
					},
					{
						"name": "Reservation Item",
						"type": "nchar"
					},
					{
						"name": "User name",
						"type": "char"
					},
					{
						"name": "Movement Type",
						"type": "char"
					},
					{
						"name": "Requirement Date",
						"type": "char"
					},
					{
						"name": "Account Doc Creation Date",
						"type": "char"
					},
					{
						"name": "Material Document",
						"type": "char"
					},
					{
						"name": "Order Number",
						"type": "char"
					},
					{
						"name": "Material",
						"type": "char"
					},
					{
						"name": "Unit Of Measure",
						"type": "char"
					},
					{
						"name": "Quantity",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "Goods Recipient",
						"type": "char"
					},
					{
						"name": "Material Desc",
						"type": "char"
					},
					{
						"name": "Document Date",
						"type": "char"
					},
					{
						"name": "Document User",
						"type": "char"
					},
					{
						"name": "Department",
						"type": "char"
					},
					{
						"name": "Plant",
						"type": "char"
					},
					{
						"name": "Full name of Person",
						"type": "char"
					},
					{
						"name": "TO Doc",
						"type": "nchar"
					},
					{
						"name": "TO Date",
						"type": "char"
					},
					{
						"name": "No Days",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MR Qty",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "Final Issued Qty",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "SOH Batch",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "Delivery in Full",
						"type": "char"
					},
					{
						"name": "Delivery ontime",
						"type": "char"
					},
					{
						"name": "DIFOT",
						"type": "char"
					},
					{
						"name": "Cost Center",
						"type": "char"
					},
					{
						"name": "Item deleted",
						"type": "char"
					},
					{
						"name": "Mvt allowed",
						"type": "char"
					},
					{
						"name": "SLoc",
						"type": "char"
					},
					{
						"name": "Batch",
						"type": "char"
					},
					{
						"name": "Order type",
						"type": "char"
					},
					{
						"name": "Created Date",
						"type": "char"
					},
					{
						"name": "User status",
						"type": "char"
					},
					{
						"name": "Release",
						"type": "char"
					},
					{
						"name": "Release date",
						"type": "char"
					},
					{
						"name": "Unblock date",
						"type": "char"
					},
					{
						"name": "Moving Freq",
						"type": "char"
					},
					{
						"name": "SOH SLoc",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "Consignment Stock",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "MRP Controller",
						"type": "char"
					},
					{
						"name": "MCAB",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "SOH Plant",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "SOH Company",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "CREATED_DATE",
						"type": "char"
					},
					{
						"name": "CREATED_TIME",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "YPS_Mat_Res2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WatermarkValue",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAP SQL Table",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Reservation Number",
						"type": "nchar"
					},
					{
						"name": "Reservation Item",
						"type": "nchar"
					},
					{
						"name": "User name",
						"type": "char"
					},
					{
						"name": "Movement Type",
						"type": "char"
					},
					{
						"name": "Requirement Date",
						"type": "char"
					},
					{
						"name": "Account Doc Creation Date",
						"type": "char"
					},
					{
						"name": "Material Document",
						"type": "char"
					},
					{
						"name": "Order Number",
						"type": "char"
					},
					{
						"name": "Material",
						"type": "char"
					},
					{
						"name": "Unit Of Measure",
						"type": "char"
					},
					{
						"name": "Quantity",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "Goods Recipient",
						"type": "char"
					},
					{
						"name": "Material Desc",
						"type": "char"
					},
					{
						"name": "Document Date",
						"type": "char"
					},
					{
						"name": "Document User",
						"type": "char"
					},
					{
						"name": "Department",
						"type": "char"
					},
					{
						"name": "Plant",
						"type": "char"
					},
					{
						"name": "Full name of Person",
						"type": "char"
					},
					{
						"name": "TO Doc",
						"type": "nchar"
					},
					{
						"name": "TO Date",
						"type": "char"
					},
					{
						"name": "No Days",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MR Qty",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "Final Issued Qty",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "SOH Batch",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "Delivery in Full",
						"type": "char"
					},
					{
						"name": "Delivery ontime",
						"type": "char"
					},
					{
						"name": "DIFOT",
						"type": "char"
					},
					{
						"name": "Cost Center",
						"type": "char"
					},
					{
						"name": "Item deleted",
						"type": "char"
					},
					{
						"name": "Mvt allowed",
						"type": "char"
					},
					{
						"name": "SLoc",
						"type": "char"
					},
					{
						"name": "Batch",
						"type": "char"
					},
					{
						"name": "Order type",
						"type": "char"
					},
					{
						"name": "Created Date",
						"type": "char"
					},
					{
						"name": "User status",
						"type": "char"
					},
					{
						"name": "Release",
						"type": "char"
					},
					{
						"name": "Release date",
						"type": "char"
					},
					{
						"name": "Unblock date",
						"type": "char"
					},
					{
						"name": "Moving Freq",
						"type": "char"
					},
					{
						"name": "SOH SLoc",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "Consignment Stock",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "MRP Controller",
						"type": "char"
					},
					{
						"name": "MCAB",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "SOH Plant",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "SOH Company",
						"type": "decimal",
						"precision": 13,
						"scale": 3
					},
					{
						"name": "CREATED_DATE",
						"type": "char"
					},
					{
						"name": "CREATED_TIME",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "YPS_Mat_Res3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Emp_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Emp_name",
						"type": "char"
					},
					{
						"name": "GUID",
						"type": "char"
					},
					{
						"name": "Started_at",
						"type": "char"
					},
					{
						"name": "Completed_at",
						"type": "char"
					},
					{
						"name": "First_name",
						"type": "char"
					},
					{
						"name": "Last_name",
						"type": "char"
					},
					{
						"name": "Question_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Question_text",
						"type": "char"
					},
					{
						"name": "Answer",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMPLOYEE_RESPONSE6"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BOT_ANALYSIS_HEALTH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "BOT ANALYSIS HEALTH",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tID",
						"type": "uniqueidentifier"
					},
					{
						"name": "tWorkplaceID",
						"type": "nvarchar"
					},
					{
						"name": "tReadDate",
						"type": "date"
					},
					{
						"name": "tReadTime",
						"type": "time",
						"scale": 7
					},
					{
						"name": "tTemperature",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "tSymptoms",
						"type": "nvarchar"
					},
					{
						"name": "tRisks",
						"type": "nvarchar"
					},
					{
						"name": "tSeenDoc",
						"type": "nvarchar"
					},
					{
						"name": "tCreateDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Concern",
						"type": "nvarchar"
					},
					{
						"name": "tTravelHistory",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblHealth"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BOT_ANALYSIS_TRAVEL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "BOT ANALYSIS TRAVEL",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tTravelID",
						"type": "uniqueidentifier"
					},
					{
						"name": "tWorkplaceID",
						"type": "nvarchar"
					},
					{
						"name": "tTravelStatus",
						"type": "nvarchar"
					},
					{
						"name": "tTravelDestination",
						"type": "nvarchar"
					},
					{
						"name": "tTravelStartDate",
						"type": "date"
					},
					{
						"name": "tTravelEndDate",
						"type": "date"
					},
					{
						"name": "tTravelRisk",
						"type": "nvarchar"
					},
					{
						"name": "tTravelQuarantine",
						"type": "nvarchar"
					},
					{
						"name": "tCreateDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblTravel"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "blob",
						"container": "restapi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_zlx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ebeln",
						"type": "varchar"
					},
					{
						"name": "Company_Code",
						"type": "char"
					},
					{
						"name": "Purchasing_Document_Category",
						"type": "char"
					},
					{
						"name": "Purchasing_Document_Type",
						"type": "char"
					},
					{
						"name": "Control_indicator",
						"type": "char"
					},
					{
						"name": "Deletion_Indicator",
						"type": "char"
					},
					{
						"name": "Status",
						"type": "char"
					},
					{
						"name": "Created_on",
						"type": "char"
					},
					{
						"name": "created_by",
						"type": "char"
					},
					{
						"name": "Purchasing_Org",
						"type": "char"
					},
					{
						"name": "Purchasing_Grp",
						"type": "char"
					},
					{
						"name": "Currency_Key",
						"type": "char"
					},
					{
						"name": "Total_Value_at_release",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[ekko]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDMS_Blob_Storage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IDMS BLOB Storage",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "IDMS File 10th August.csv",
						"folderPath": "Health And Travel/o365 And IDMS Files",
						"container": "restapi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "UserName",
						"type": "String"
					},
					{
						"name": "DisplayName",
						"type": "String"
					},
					{
						"name": "EmployeeId",
						"type": "String"
					},
					{
						"name": "IsExecutiveEmployee",
						"type": "String"
					},
					{
						"name": "EmailId",
						"type": "String"
					},
					{
						"name": "TelephoneNumber",
						"type": "String"
					},
					{
						"name": "HomephoneNumber",
						"type": "String"
					},
					{
						"name": "PostalCode",
						"type": "String"
					},
					{
						"name": "PostalAddress",
						"type": "String"
					},
					{
						"name": "TerminationDate",
						"type": "String"
					},
					{
						"name": "IsActive",
						"type": "String"
					},
					{
						"name": "EmployeeType",
						"type": "String"
					},
					{
						"name": "CostCenter",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					},
					{
						"name": "DepartmentName",
						"type": "String"
					},
					{
						"name": "DivisionName",
						"type": "String"
					},
					{
						"name": "SectionName",
						"type": "String"
					},
					{
						"name": "PositionName",
						"type": "String"
					},
					{
						"name": "EmployeeSubArea",
						"type": "String"
					},
					{
						"name": "EESubGroupName",
						"type": "String"
					},
					{
						"name": "BranchName",
						"type": "String"
					},
					{
						"name": "UnitName",
						"type": "String"
					},
					{
						"name": "WP.Full Name",
						"type": "String"
					},
					{
						"name": "WP.Email",
						"type": "String"
					},
					{
						"name": "WorkLocationDescription",
						"type": "String"
					},
					{
						"name": "Manager.DisplayName",
						"type": "String"
					},
					{
						"name": "Manager.EmailId",
						"type": "String"
					},
					{
						"name": "Supervisor.DisplayName",
						"type": "String"
					},
					{
						"name": "Supervisor.EmailId",
						"type": "String"
					},
					{
						"name": "EEGroup Description",
						"type": "String"
					},
					{
						"name": "BU",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDMS_o365')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IDMS o365 Data",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UserName",
						"type": "nvarchar"
					},
					{
						"name": "DisplayName",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeId",
						"type": "nvarchar"
					},
					{
						"name": "IsExecEmp",
						"type": "nvarchar"
					},
					{
						"name": "EmailId",
						"type": "nvarchar"
					},
					{
						"name": "TelNumber",
						"type": "nvarchar"
					},
					{
						"name": "HomePhNumber",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "PostalAddress",
						"type": "nvarchar"
					},
					{
						"name": "TerminationDate",
						"type": "date"
					},
					{
						"name": "IsActive",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeType",
						"type": "nchar"
					},
					{
						"name": "CostCenter",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "DeptName",
						"type": "nvarchar"
					},
					{
						"name": "DivName",
						"type": "nvarchar"
					},
					{
						"name": "SectName",
						"type": "nvarchar"
					},
					{
						"name": "PostionName",
						"type": "nvarchar"
					},
					{
						"name": "EESubArea",
						"type": "nvarchar"
					},
					{
						"name": "EESubGrpName",
						"type": "nvarchar"
					},
					{
						"name": "BranchName",
						"type": "nvarchar"
					},
					{
						"name": "UnitName",
						"type": "nvarchar"
					},
					{
						"name": "WPFullName",
						"type": "nvarchar"
					},
					{
						"name": "WPEmail",
						"type": "nvarchar"
					},
					{
						"name": "WrkLocDesc",
						"type": "nvarchar"
					},
					{
						"name": "MgrDispName",
						"type": "nvarchar"
					},
					{
						"name": "MgrEmailId",
						"type": "nvarchar"
					},
					{
						"name": "SupDispName",
						"type": "nvarchar"
					},
					{
						"name": "SupEmailId",
						"type": "nvarchar"
					},
					{
						"name": "EEGroupDesc",
						"type": "nvarchar"
					},
					{
						"name": "BU",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "IdMS_o365_WP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "bot",
						"folderPath": "blob",
						"container": "restapi"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Office365Table1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Office365",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Office365Table",
				"schema": [],
				"typeProperties": {
					"tableName": "BasicDataSet_v0.DirectReport_v0"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Office365')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_9953298f-34c8-44d8-a45d-030efa99f637_9bc99a4c-2247-4f55-923f-7efc49645462.parquet",
						"folderPath": "bot",
						"container": "myrestapi"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "started_at",
						"type": "UTF8"
					},
					{
						"name": "completed_at",
						"type": "UTF8"
					},
					{
						"name": "id",
						"type": "UTF8"
					},
					{
						"name": "emp_id",
						"type": "INT64"
					},
					{
						"name": "name",
						"type": "UTF8"
					},
					{
						"name": "first_name",
						"type": "UTF8"
					},
					{
						"name": "last_name",
						"type": "UTF8"
					},
					{
						"name": "question_id",
						"type": "INT64"
					},
					{
						"name": "question_text",
						"type": "UTF8"
					},
					{
						"name": "content",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"url": {
						"type": "string",
						"defaultValue": "1"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@{concat('https://surveybot.io/api/v1/surveys/4cd466510cda3fda20b4fb320e6de470/responses?page=',dataset().url,'&per_page=5&offset=0&api_key=Z4ehauCnEHozaX_JGcLR9eYf26Aj6SApp4_eEp-HKnYD_t2eOXjncLynX4qqtX-P9x28B4Mnqud6Rx0Q')}",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SQL Table",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Expr1",
						"type": "varchar"
					},
					{
						"name": "ebeln",
						"type": "varchar"
					},
					{
						"name": "Company_Code",
						"type": "char"
					},
					{
						"name": "Purchasing_Document_Category",
						"type": "char"
					},
					{
						"name": "Purchasing_Document_Type",
						"type": "char"
					},
					{
						"name": "Control_indicator",
						"type": "char"
					},
					{
						"name": "Deletion_Indicator",
						"type": "char"
					},
					{
						"name": "Status",
						"type": "char"
					},
					{
						"name": "Created_on",
						"type": "char"
					},
					{
						"name": "created_by",
						"type": "char"
					},
					{
						"name": "Purchasing_Org",
						"type": "char"
					},
					{
						"name": "Purchasing_Grp",
						"type": "char"
					},
					{
						"name": "Currency_Key",
						"type": "char"
					},
					{
						"name": "Total_Value_at_release",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "Expr2",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "View_PurchaseOrder"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_WaterMark_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SQL_WaterMark_Table",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tname",
						"type": "nvarchar"
					},
					{
						"name": "tdatetime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Watermark"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapTableResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPED1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "YPS_STAGING"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPED1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_zlx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPED1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "EKKO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPED1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TblHtest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "TblHtest",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tID",
						"type": "uniqueidentifier"
					},
					{
						"name": "tWorkplaceID",
						"type": "nvarchar"
					},
					{
						"name": "tReadDate",
						"type": "date"
					},
					{
						"name": "tReadTime",
						"type": "time",
						"scale": 7
					},
					{
						"name": "tTemperature",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "tSymptoms",
						"type": "nvarchar"
					},
					{
						"name": "tRisks",
						"type": "nvarchar"
					},
					{
						"name": "tSeenDoc",
						"type": "nvarchar"
					},
					{
						"name": "tCreateDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Concern",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblHtest"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WORKATO_HEALTH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "WORK ATO HEALTH",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tID",
						"type": "uniqueidentifier"
					},
					{
						"name": "tWorkplaceID",
						"type": "nvarchar"
					},
					{
						"name": "tReadDate",
						"type": "date"
					},
					{
						"name": "tReadTime",
						"type": "time",
						"scale": 7
					},
					{
						"name": "tTemperature",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "tSymptoms",
						"type": "nvarchar"
					},
					{
						"name": "tRisks",
						"type": "nvarchar"
					},
					{
						"name": "tSeenDoc",
						"type": "nvarchar"
					},
					{
						"name": "tCreateDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "tTravelHistory",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblHealth"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WORK_ATO_TRAVEL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "WORK ATO TRAVEL",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tTravelID",
						"type": "uniqueidentifier"
					},
					{
						"name": "tWorkplaceID",
						"type": "nvarchar"
					},
					{
						"name": "tTravelStatus",
						"type": "nvarchar"
					},
					{
						"name": "tTravelDestination",
						"type": "nvarchar"
					},
					{
						"name": "tTravelStartDate",
						"type": "date"
					},
					{
						"name": "tTravelEndDate",
						"type": "date"
					},
					{
						"name": "tTravelRisk",
						"type": "nvarchar"
					},
					{
						"name": "tTravelQuarantine",
						"type": "nvarchar"
					},
					{
						"name": "tCreateDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblTravel"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WaterMarkTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WatermarkValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Blob ",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Development Env",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "AZURE SQL Database",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Health BOT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "BOT Analysis",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Office365')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Office 365 Service Connection",
				"annotations": [],
				"type": "Office365",
				"typeProperties": {
					"office365TenantId": "c88daf55-f4aa-4f79-a143-526402ab9a23",
					"servicePrincipalTenantId": "c88daf55-f4aa-4f79-a143-526402ab9a23",
					"servicePrincipalId": "[parameters('Office365_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('Office365_servicePrincipalKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPECC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAPECC",
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SAPECC_properties_typeProperties_clientId')]",
					"language": "en",
					"sncMode": false,
					"userName": "[parameters('SAPECC_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "vivek02"
					},
					"server": "[parameters('SAPECC_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SAPECC_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAP-IntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SAP-IntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPED1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAPED1",
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SAPED1_properties_typeProperties_clientId')]",
					"language": "",
					"sncMode": false,
					"userName": "[parameters('SAPED1_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "vivek02"
					},
					"server": "[parameters('SAPED1_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SAPED1_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAP-IntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SAP-IntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health Data EOD')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Health Data EOD",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Health Data_Flow",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-04-27T15:59:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Health Data_Flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health Data Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Health Data Trigger",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Health Data_Flow",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 30,
						"startTime": "2020-04-27T02:15:00.000Z",
						"endTime": "2020-08-31T03:15:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Health Data_Flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Travel Data Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Travel Data Trigger",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Travel Data Pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 30,
						"startTime": "2020-04-27T02:15:00.000Z",
						"endTime": "2020-08-31T03:15:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Travel Data Pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "DWH Integration Runtime",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP-IntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "SAP ECC Integration Runtime",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "WORKATO_HEALTH",
								"type": "DatasetReference"
							},
							"name": "HealthData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BOT_ANALYSIS_HEALTH",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "todayrecords1"
						}
					],
					"script": "source(output(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\ttTravelHistory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HealthData\ntodayrecords1 derive(concern = case(tSymptoms == 'Yes', 'Yes',tSeenDoc == 'Yes', 'Yes', tRisks == 'Yes', 'Yes', tTemperature >= 38.00, 'Yes', tTravelHistory == 'Yes', 'Yes','No')) ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(tID!='')) ~> AlterRow1\nHealthData filter(tReadDate > addDays(currentDate(), -1)) ~> todayrecords1\nAlterRow1 sink(input(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\tConcern as string,\n\t\ttTravelHistory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['tID'],\n\tformat: 'table',\n\tmapColumn(\n\t\ttID,\n\t\ttWorkplaceID,\n\t\ttReadDate,\n\t\ttReadTime,\n\t\ttTemperature,\n\t\ttSymptoms,\n\t\ttRisks,\n\t\ttSeenDoc,\n\t\ttCreateDateTime,\n\t\tConcern = concern,\n\t\ttTravelHistory\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WORKATO_HEALTH')]",
				"[concat(variables('factoryId'), '/datasets/BOT_ANALYSIS_HEALTH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1_copy2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "WORKATO_HEALTH",
								"type": "DatasetReference"
							},
							"name": "HealthData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TblHtest",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "source(output(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\ttTravelHistory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HealthData\nFilter1 derive(concern = case(tSymptoms == 'Yes', 'Yes',tSeenDoc == 'Yes', 'Yes', tRisks == 'Yes', 'Yes', tTemperature >= 38.00, 'Yes','No')) ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(tID!='')) ~> AlterRow1\nHealthData filter(tReadDate > addDays(currentDate(), -1)) ~> Filter1\nAlterRow1 sink(input(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\tConcern as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['tID'],\n\tformat: 'table',\n\tmapColumn(\n\t\ttID,\n\t\ttWorkplaceID,\n\t\ttReadDate,\n\t\ttReadTime,\n\t\ttTemperature,\n\t\ttSymptoms,\n\t\ttRisks,\n\t\ttSeenDoc,\n\t\ttCreateDateTime,\n\t\tConcern = concern\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WORKATO_HEALTH')]",
				"[concat(variables('factoryId'), '/datasets/TblHtest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "IDMS_Test",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "IDMS_Test",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DeleteRows"
						}
					],
					"script": "source(output(\n\t\tUserName as string,\n\t\tDisplayName as string,\n\t\tEmployeeId as string,\n\t\tIsExecEmp as string,\n\t\tEmailId as string,\n\t\tTelNumber as string,\n\t\tHomePhNumber as string,\n\t\tPostalCode as string,\n\t\tPostalAddress as string,\n\t\tTerminationDate as date,\n\t\tIsActive as string,\n\t\tEmployeeType as string,\n\t\tCostCenter as string,\n\t\tCompanyName as string,\n\t\tDeptName as string,\n\t\tDivName as string,\n\t\tSectName as string,\n\t\tPostionName as string,\n\t\tEESubArea as string,\n\t\tEESubGrpName as string,\n\t\tBranchName as string,\n\t\tUnitName as string,\n\t\tWPFullName as string,\n\t\tWPEmail as string,\n\t\tWrkLocDesc as string,\n\t\tMgrDispName as string,\n\t\tMgrEmailId as string,\n\t\tSupDispName as string,\n\t\tSupEmailId as string,\n\t\tEEGroupDesc as string,\n\t\tBU as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 10,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 alterRow(deleteIf(UserName!='')) ~> DeleteRows\nDeleteRows sink(input(\n\t\tUserName as string,\n\t\tDisplayName as string,\n\t\tEmployeeId as string,\n\t\tIsExecEmp as string,\n\t\tEmailId as string,\n\t\tTelNumber as string,\n\t\tHomePhNumber as string,\n\t\tPostalCode as string,\n\t\tPostalAddress as string,\n\t\tTerminationDate as date,\n\t\tIsActive as string,\n\t\tEmployeeType as string,\n\t\tCostCenter as string,\n\t\tCompanyName as string,\n\t\tDeptName as string,\n\t\tDivName as string,\n\t\tSectName as string,\n\t\tPostionName as string,\n\t\tEESubArea as string,\n\t\tEESubGrpName as string,\n\t\tBranchName as string,\n\t\tUnitName as string,\n\t\tWPFullName as string,\n\t\tWPEmail as string,\n\t\tWrkLocDesc as string,\n\t\tMgrDispName as string,\n\t\tMgrEmailId as string,\n\t\tSupDispName as string,\n\t\tSupEmailId as string,\n\t\tEEGroupDesc as string,\n\t\tBU as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['UserName'],\n\tformat: 'table',\n\tmapColumn(\n\t\tUserName,\n\t\tDisplayName,\n\t\tEmployeeId,\n\t\tIsExecEmp,\n\t\tEmailId,\n\t\tTelNumber,\n\t\tHomePhNumber,\n\t\tPostalCode,\n\t\tPostalAddress,\n\t\tTerminationDate,\n\t\tIsActive,\n\t\tEmployeeType,\n\t\tCostCenter,\n\t\tCompanyName,\n\t\tDeptName,\n\t\tDivName,\n\t\tSectName,\n\t\tPostionName,\n\t\tEESubArea,\n\t\tEESubGrpName,\n\t\tBranchName,\n\t\tUnitName,\n\t\tWPFullName,\n\t\tWPEmail,\n\t\tWrkLocDesc,\n\t\tMgrDispName,\n\t\tMgrEmailId,\n\t\tSupDispName,\n\t\tSupEmailId,\n\t\tEEGroupDesc,\n\t\tBU\n\t),\n\tdateFormat:'yyyy-MM-dd',\n\ttimestampFormat:'yyyy.MM.dd HH:mm:ss',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/IDMS_Test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDMS Dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IDMS O365 Dataflow",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dataflow2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Health And Travel/o365 And IDMS Files/Latest File",
									"wildcardFileName": "*csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "restapi/Health And Travel/o365 Error Logs"
							},
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DisplayName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DisplayName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsExecutiveEmployee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsExecEmp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmailId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TelephoneNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TelNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomephoneNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomePhNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostalAddress",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PostalAddress",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TerminationDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TerminationDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "IsActive",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsActive",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CostCenter",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CostCenter",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DepartmentName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeptName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DivisionName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DivName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SectionName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SectName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PositionName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PostionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeSubArea",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EESubArea",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EESubGroupName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EESubGrpName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UnitName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UnitName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WP.Full Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WPFullName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WP.Email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WPEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkLocationDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WrkLocDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Manager.DisplayName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MgrDispName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Manager.EmailId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MgrEmailId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supervisor.DisplayName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SupDispName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supervisor.EmailId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SupEmailId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EEGroup Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EEGroupDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BU",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "o365_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "IDMS_Test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Validation1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "Validation1",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "o365_Data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:00:60",
							"sleep": 10,
							"minimumSize": 1
						}
					}
				],
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/o365_Data')]",
				"[concat(variables('factoryId'), '/datasets/IDMS_Test')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/o365_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.csv",
						"folderPath": "Health And Travel/o365 And IDMS Files/Latest File",
						"container": "restapi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDMS_Test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UserName",
						"type": "nvarchar"
					},
					{
						"name": "DisplayName",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeId",
						"type": "nvarchar"
					},
					{
						"name": "IsExecEmp",
						"type": "nvarchar"
					},
					{
						"name": "EmailId",
						"type": "nvarchar"
					},
					{
						"name": "TelNumber",
						"type": "nvarchar"
					},
					{
						"name": "HomePhNumber",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "PostalAddress",
						"type": "nvarchar"
					},
					{
						"name": "TerminationDate",
						"type": "date"
					},
					{
						"name": "IsActive",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeType",
						"type": "nchar"
					},
					{
						"name": "CostCenter",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "DeptName",
						"type": "nvarchar"
					},
					{
						"name": "DivName",
						"type": "nvarchar"
					},
					{
						"name": "SectName",
						"type": "nvarchar"
					},
					{
						"name": "PostionName",
						"type": "nvarchar"
					},
					{
						"name": "EESubArea",
						"type": "nvarchar"
					},
					{
						"name": "EESubGrpName",
						"type": "nvarchar"
					},
					{
						"name": "BranchName",
						"type": "nvarchar"
					},
					{
						"name": "UnitName",
						"type": "nvarchar"
					},
					{
						"name": "WPFullName",
						"type": "nvarchar"
					},
					{
						"name": "WPEmail",
						"type": "nvarchar"
					},
					{
						"name": "WrkLocDesc",
						"type": "nvarchar"
					},
					{
						"name": "MgrDispName",
						"type": "nvarchar"
					},
					{
						"name": "MgrEmailId",
						"type": "nvarchar"
					},
					{
						"name": "SupDispName",
						"type": "nvarchar"
					},
					{
						"name": "SupEmailId",
						"type": "nvarchar"
					},
					{
						"name": "EEGroupDesc",
						"type": "nvarchar"
					},
					{
						"name": "BU",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "IdMS_test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase3')]"
			]
		}
	]
}