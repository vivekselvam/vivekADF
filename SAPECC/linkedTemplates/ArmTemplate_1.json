{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SAPECC"
		},
		"SapHana1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SapHana1'"
		},
		"SAPECC_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"SAPECC_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vivek02"
		},
		"SAPECC_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "myerpabapdev.smrt.com.sg"
		},
		"SAPECC_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"SAPED1_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "100"
		},
		"SAPED1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vivek02"
		},
		"SAPED1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "myerpabapdev.smrt.com.sg"
		},
		"SAPED1_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Office365Table1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Office365",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Office365Table",
				"schema": [],
				"typeProperties": {
					"tableName": "BasicDataSet_v0.DirectReport_v0"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_9953298f-34c8-44d8-a45d-030efa99f637_9bc99a4c-2247-4f55-923f-7efc49645462.parquet",
						"folderPath": "bot",
						"container": "myrestapi"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "started_at",
						"type": "UTF8"
					},
					{
						"name": "completed_at",
						"type": "UTF8"
					},
					{
						"name": "id",
						"type": "UTF8"
					},
					{
						"name": "emp_id",
						"type": "INT64"
					},
					{
						"name": "name",
						"type": "UTF8"
					},
					{
						"name": "first_name",
						"type": "UTF8"
					},
					{
						"name": "last_name",
						"type": "UTF8"
					},
					{
						"name": "question_id",
						"type": "INT64"
					},
					{
						"name": "question_text",
						"type": "UTF8"
					},
					{
						"name": "content",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"url": {
						"type": "string",
						"defaultValue": "1"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@{concat('https://surveybot.io/api/v1/surveys/4cd466510cda3fda20b4fb320e6de470/responses?page=',dataset().url,'&per_page=5&offset=0&api_key=Z4ehauCnEHozaX_JGcLR9eYf26Aj6SApp4_eEp-HKnYD_t2eOXjncLynX4qqtX-P9x28B4Mnqud6Rx0Q')}",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WORKATO_HEALTH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "WORK ATO HEALTH",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tID",
						"type": "uniqueidentifier"
					},
					{
						"name": "tWorkplaceID",
						"type": "nvarchar"
					},
					{
						"name": "tReadDate",
						"type": "date"
					},
					{
						"name": "tReadTime",
						"type": "time",
						"scale": 7
					},
					{
						"name": "tTemperature",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "tSymptoms",
						"type": "nvarchar"
					},
					{
						"name": "tRisks",
						"type": "nvarchar"
					},
					{
						"name": "tSeenDoc",
						"type": "nvarchar"
					},
					{
						"name": "tCreateDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblHealth"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WORK_ATO_TRAVEL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "WORK ATO TRAVEL",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tTravelID",
						"type": "uniqueidentifier"
					},
					{
						"name": "tWorkplaceID",
						"type": "nvarchar"
					},
					{
						"name": "tTravelStatus",
						"type": "nvarchar"
					},
					{
						"name": "tTravelDestination",
						"type": "nvarchar"
					},
					{
						"name": "tTravelStartDate",
						"type": "date"
					},
					{
						"name": "tTravelEndDate",
						"type": "date"
					},
					{
						"name": "tTravelRisk",
						"type": "nvarchar"
					},
					{
						"name": "tTravelQuarantine",
						"type": "nvarchar"
					},
					{
						"name": "tCreateDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tblTravel"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WaterMarkTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WatermarkValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPECC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAPECC",
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SAPECC_properties_typeProperties_clientId')]",
					"language": "en",
					"sncMode": false,
					"userName": "[parameters('SAPECC_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "vivek02"
					},
					"server": "[parameters('SAPECC_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SAPECC_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAP-IntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAPED1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAPED1",
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SAPED1_properties_typeProperties_clientId')]",
					"language": "",
					"sncMode": false,
					"userName": "[parameters('SAPED1_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "vivek02"
					},
					"server": "[parameters('SAPED1_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SAPED1_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SAP-IntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapHana1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "HANA views",
				"annotations": [],
				"type": "SapHana",
				"typeProperties": {
					"connectionString": "[parameters('SapHana1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SAP-IntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_WaterMark_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SQL_WaterMark_Table",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tname",
						"type": "nvarchar"
					},
					{
						"name": "tdatetime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Watermark"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLOB_to_SQL Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BLOB to SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['responses_started_at']"
										},
										"sink": {
											"name": "Started_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses_completed_at']"
										},
										"sink": {
											"name": "Completed_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses_id']"
										},
										"sink": {
											"name": "GUID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['respondent_id']"
										},
										"sink": {
											"name": "Emp_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['respondent_name']"
										},
										"sink": {
											"name": "Emp_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['respondent_first_name']"
										},
										"sink": {
											"name": "First_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['respondent_last_name']"
										},
										"sink": {
											"name": "Last_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['answers_question_id']"
										},
										"sink": {
											"name": "Question_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['answers_question_text']"
										},
										"sink": {
											"name": "Question_text",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['answers_content']"
										},
										"sink": {
											"name": "Answer",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health BOT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Rest Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['question_id']"
										},
										"sink": {
											"name": "Question_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['question_text']"
										},
										"sink": {
											"name": "Question_text",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['content']"
										},
										"sink": {
											"name": "Answer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['started_at']"
										},
										"sink": {
											"name": "Started_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['completed_at']"
										},
										"sink": {
											"name": "Completed_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['id']"
										},
										"sink": {
											"name": "GUID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['respondent']['id']"
										},
										"sink": {
											"name": "Emp_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['respondent']['name']"
										},
										"sink": {
											"name": "Emp_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['respondent']['first_name']"
										},
										"sink": {
											"name": "First_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['respondent']['last_name']"
										},
										"sink": {
											"name": "Last_name",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['responses'][0]['answers']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health Data Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Health Data",
						"description": "Health Data Pipeline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[Health_sto_proc]",
								"sqlWriterTableType": "TypHealth",
								"storedProcedureTableTypeParameterName": "Health"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tID",
											"type": "Guid"
										},
										"sink": {
											"name": "tID",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "tWorkplaceID",
											"type": "String"
										},
										"sink": {
											"name": "tWorkplaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tReadDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "tReadDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "tReadTime",
											"type": "TimeSpan"
										},
										"sink": {
											"name": "tReadtime",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "tTemperature",
											"type": "Decimal"
										},
										"sink": {
											"name": "tTemperature",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "tSymptoms",
											"type": "String"
										},
										"sink": {
											"name": "tSymptoms",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tRisks",
											"type": "String"
										},
										"sink": {
											"name": "tRisks",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tSeenDoc",
											"type": "String"
										},
										"sink": {
											"name": "tSeenDoc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tCreateDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "tCreateDateTime",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "WORKATO_HEALTH",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BOT_ANALYSIS_HEALTH",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"Datetime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WORKATO_HEALTH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDMS O365 Pipelines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IDMS & o365 Data Pipeline",
				"activities": [
					{
						"name": "IDMS O365 Pipeline",
						"description": "IDMS O365 Pipeline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "restapi/Health And Travel/o365 Error Logs"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UserName",
											"type": "String"
										},
										"sink": {
											"name": "UserName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DisplayName",
											"type": "String"
										},
										"sink": {
											"name": "DisplayName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmployeeId",
											"type": "String"
										},
										"sink": {
											"name": "EmployeeId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsExecutiveEmployee",
											"type": "String"
										},
										"sink": {
											"name": "IsExecEmp",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmailId",
											"type": "String"
										},
										"sink": {
											"name": "EmailId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TelephoneNumber",
											"type": "String"
										},
										"sink": {
											"name": "TelNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HomephoneNumber",
											"type": "String"
										},
										"sink": {
											"name": "HomePhNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PostalCode",
											"type": "String"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PostalAddress",
											"type": "String"
										},
										"sink": {
											"name": "PostalAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TerminationDate",
											"type": "String"
										},
										"sink": {
											"name": "TerminationDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "IsActive",
											"type": "String"
										},
										"sink": {
											"name": "IsActive",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "String"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CostCenter",
											"type": "String"
										},
										"sink": {
											"name": "CostCenter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DepartmentName",
											"type": "String"
										},
										"sink": {
											"name": "DeptName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DivisionName",
											"type": "String"
										},
										"sink": {
											"name": "DivName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SectionName",
											"type": "String"
										},
										"sink": {
											"name": "SectName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PositionName",
											"type": "String"
										},
										"sink": {
											"name": "PostionName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmployeeSubArea",
											"type": "String"
										},
										"sink": {
											"name": "EESubArea",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EESubGroupName",
											"type": "String"
										},
										"sink": {
											"name": "EESubGrpName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BranchName",
											"type": "String"
										},
										"sink": {
											"name": "BranchName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UnitName",
											"type": "String"
										},
										"sink": {
											"name": "UnitName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WP.Full Name",
											"type": "String"
										},
										"sink": {
											"name": "WPFullName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WP.Email",
											"type": "String"
										},
										"sink": {
											"name": "WPEmail",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkLocationDescription",
											"type": "String"
										},
										"sink": {
											"name": "WrkLocDesc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Manager.DisplayName",
											"type": "String"
										},
										"sink": {
											"name": "MgrDispName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Manager.EmailId",
											"type": "String"
										},
										"sink": {
											"name": "MgrEmailId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supervisor.DisplayName",
											"type": "String"
										},
										"sink": {
											"name": "SupDispName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supervisor.EmailId",
											"type": "String"
										},
										"sink": {
											"name": "SupEmailId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EEGroup Description",
											"type": "String"
										},
										"sink": {
											"name": "EEGroupDesc",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "IDMS_Blob_Storage",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "IDMS_o365",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST_to_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('Upperlimit'),50)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set Lower Limit",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Lowerlimit",
										"value": {
											"value": "@variables('Upperlimit')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Upper Limit",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Upperlimit",
										"value": {
											"value": "@string(add(int(variables('Lowerlimit')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Lower Limit",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"quoteAllText": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestResource1",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@variables('Lowerlimit')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Json1",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							],
							"timeout": "0.00:20:00"
						}
					}
				],
				"variables": {
					"Lowerlimit": {
						"type": "String",
						"defaultValue": "0"
					},
					"Upperlimit": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Travel Data Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Travel Data Pipeline",
				"activities": [
					{
						"name": "Travel Data",
						"description": "Travel Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[Travel_sto_proc]",
								"sqlWriterTableType": "TypTravel",
								"storedProcedureTableTypeParameterName": "Travel"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tTravelID",
											"type": "Guid"
										},
										"sink": {
											"name": "tTravelID",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "tWorkplaceID",
											"type": "String"
										},
										"sink": {
											"name": "tWorkplaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tTravelStatus",
											"type": "String"
										},
										"sink": {
											"name": "tTravelStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tTravelDestination",
											"type": "String"
										},
										"sink": {
											"name": "tTravelDestination",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tTravelStartDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "tTravelStartDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "tTravelEndDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "tTravelEndDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "tTravelRisk",
											"type": "String"
										},
										"sink": {
											"name": "tTravelRisk",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tTravelQuarantine",
											"type": "String"
										},
										"sink": {
											"name": "tTravelQuarantine",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tCreateDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "tCreateDateTime",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "WORK_ATO_TRAVEL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BOT_ANALYSIS_TRAVEL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WORK_ATO_TRAVEL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "REST API to BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['stats']['showing']"
										},
										"sink": {
											"path": "$['stats']['showing']"
										}
									},
									{
										"source": {
											"path": "$['stats']['total']"
										},
										"sink": {
											"path": "$['stats']['total']"
										}
									},
									{
										"source": {
											"path": "$['stats']['completed']"
										},
										"sink": {
											"path": "$['stats']['completed']"
										}
									},
									{
										"source": {
											"path": "$['stats']['incomplete']"
										},
										"sink": {
											"path": "$['stats']['incomplete']"
										}
									},
									{
										"source": {
											"path": "$['questions'][0]['id']"
										},
										"sink": {
											"path": "$['questions_id']"
										}
									},
									{
										"source": {
											"path": "$['questions'][0]['question_type']"
										},
										"sink": {
											"path": "$['questions_question_type']"
										}
									},
									{
										"source": {
											"path": "$['questions'][0]['question_text']"
										},
										"sink": {
											"path": "$['questions_question_text']"
										}
									},
									{
										"source": {
											"path": "$['questions'][0]['question_position']"
										},
										"sink": {
											"path": "$['questions_question_position']"
										}
									},
									{
										"source": {
											"path": "[['completed']"
										},
										"sink": {
											"path": "$['responses_completed']"
										}
									},
									{
										"source": {
											"path": "[['started_at']"
										},
										"sink": {
											"path": "$['responses_started_at']"
										}
									},
									{
										"source": {
											"path": "[['completed_at']"
										},
										"sink": {
											"path": "$['responses_completed_at']"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"path": "$['responses_id']"
										}
									},
									{
										"source": {
											"path": "[['respondent']['id']"
										},
										"sink": {
											"path": "$['respondent_id']"
										}
									},
									{
										"source": {
											"path": "[['respondent']['name']"
										},
										"sink": {
											"path": "$['respondent_name']"
										}
									},
									{
										"source": {
											"path": "[['respondent']['first_name']"
										},
										"sink": {
											"path": "$['respondent_first_name']"
										}
									},
									{
										"source": {
											"path": "[['respondent']['last_name']"
										},
										"sink": {
											"path": "$['respondent_last_name']"
										}
									},
									{
										"source": {
											"path": "[['answers'][0]['question_id']"
										},
										"sink": {
											"path": "$['answers_question_id']"
										}
									},
									{
										"source": {
											"path": "[['answers'][0]['question_text']"
										},
										"sink": {
											"path": "$['answers_question_text']"
										}
									},
									{
										"source": {
											"path": "[['answers'][0]['content']"
										},
										"sink": {
											"path": "$['answers_content']"
										}
									}
								],
								"collectionReference": "$['responses']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {
									"url": "3"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"url": {
						"type": "string",
						"defaultValue": "/url"
					}
				},
				"variables": {
					"Lowerlimit": {
						"type": "String",
						"defaultValue": "0"
					},
					"Upperlimit": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapTableResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPED1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "YPS_STAGING"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPED1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_zlx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPED1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "EKKO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SAPED1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "WORKATO_HEALTH",
								"type": "DatasetReference"
							},
							"name": "HealthData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BOT_ANALYSIS_HEALTH",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 10,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HealthData\nHealthData derive(concern = case(tSymptoms == 'Yes', 'Yes',tSeenDoc == 'Yes', 'Yes', tRisks == 'Yes', 'Yes', tTemperature > 38.0, 'Yes','No')) ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(tID!='')) ~> AlterRow1\nAlterRow1 sink(input(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\tConcern as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['tID'],\n\tformat: 'table',\n\tmapColumn(\n\t\ttID,\n\t\ttWorkplaceID,\n\t\ttReadDate,\n\t\ttReadTime,\n\t\ttTemperature,\n\t\ttSymptoms,\n\t\ttRisks,\n\t\ttSeenDoc,\n\t\ttCreateDateTime,\n\t\tConcern = concern\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WORKATO_HEALTH')]"
			]
		}
	]
}