{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SAPECC"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "WORKATO_HEALTH",
								"type": "DatasetReference"
							},
							"name": "HealthData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BOT_ANALYSIS_HEALTH",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "todayrecords1"
						}
					],
					"script": "source(output(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HealthData\ntodayrecords1 derive(concern = case(tSymptoms == 'Yes', 'Yes',tSeenDoc == 'Yes', 'Yes', tRisks == 'Yes', 'Yes', tTemperature >= 38.00, 'Yes','No')) ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(tID!='')) ~> AlterRow1\nHealthData filter(tReadDate > addDays(currentDate(), -1)) ~> todayrecords1\nAlterRow1 sink(input(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\tConcern as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['tID'],\n\tformat: 'table',\n\tmapColumn(\n\t\ttID,\n\t\ttWorkplaceID,\n\t\ttReadDate,\n\t\ttReadTime,\n\t\ttTemperature,\n\t\ttSymptoms,\n\t\ttRisks,\n\t\ttSeenDoc,\n\t\ttCreateDateTime,\n\t\tConcern = concern\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1_copy2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "WORKATO_HEALTH",
								"type": "DatasetReference"
							},
							"name": "HealthData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TblHtest",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "source(output(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HealthData\nFilter1 derive(concern = case(tSymptoms == 'Yes', 'Yes',tSeenDoc == 'Yes', 'Yes', tRisks == 'Yes', 'Yes', tTemperature >= 38.00, 'Yes','No')) ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(tID!='')) ~> AlterRow1\nHealthData filter(tReadDate > addDays(currentDate(), -1)) ~> Filter1\nAlterRow1 sink(input(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\tConcern as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['tID'],\n\tformat: 'table',\n\tmapColumn(\n\t\ttID,\n\t\ttWorkplaceID,\n\t\ttReadDate,\n\t\ttReadTime,\n\t\ttTemperature,\n\t\ttSymptoms,\n\t\ttRisks,\n\t\ttSeenDoc,\n\t\ttCreateDateTime,\n\t\tConcern = concern\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "IDMS_Blob_Storage",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "IDMS_o365",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tUserName as string,\n\t\tDisplayName as string,\n\t\tEmployeeId as string,\n\t\tIsExecutiveEmployee as string,\n\t\tEmailId as string,\n\t\tTelephoneNumber as string,\n\t\tHomephoneNumber as string,\n\t\tPostalCode as string,\n\t\tPostalAddress as string,\n\t\tTerminationDate as date,\n\t\tIsActive as string,\n\t\tEmployeeType as string,\n\t\tCostCenter as string,\n\t\tCompanyName as string,\n\t\tDepartmentName as string,\n\t\tDivisionName as string,\n\t\tSectionName as string,\n\t\tPositionName as string,\n\t\tEmployeeSubArea as string,\n\t\tEESubGroupName as string,\n\t\tBranchName as string,\n\t\tUnitName as string,\n\t\t{WP.Full Name} as string,\n\t\t{WP.Email} as string,\n\t\tWorkLocationDescription as string,\n\t\t{Manager.DisplayName} as string,\n\t\t{Manager.EmailId} as string,\n\t\t{Supervisor.DisplayName} as string,\n\t\t{Supervisor.EmailId} as string,\n\t\t{EEGroup Description} as string,\n\t\tBU as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 10) ~> source1\nsource1 alterRow(upsertIf(UserName!='')) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tUserName as string,\n\t\tDisplayName as string,\n\t\tEmployeeId as string,\n\t\tIsExecEmp as string,\n\t\tEmailId as string,\n\t\tTelNumber as string,\n\t\tHomePhNumber as string,\n\t\tPostalCode as string,\n\t\tPostalAddress as string,\n\t\tTerminationDate as date,\n\t\tIsActive as string,\n\t\tEmployeeType as string,\n\t\tCostCenter as string,\n\t\tCompanyName as string,\n\t\tDeptName as string,\n\t\tDivName as string,\n\t\tSectName as string,\n\t\tPostionName as string,\n\t\tEESubArea as string,\n\t\tEESubGrpName as string,\n\t\tBranchName as string,\n\t\tUnitName as string,\n\t\tWPFullName as string,\n\t\tWPEmail as string,\n\t\tWrkLocDesc as string,\n\t\tMgrDispName as string,\n\t\tMgrEmailId as string,\n\t\tSupDispName as string,\n\t\tSupEmailId as string,\n\t\tEEGroupDesc as string,\n\t\tBU as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['UserName'],\n\tformat: 'table',\n\tmapColumn(\n\t\tUserName,\n\t\tDisplayName,\n\t\tEmployeeId,\n\t\tIsExecEmp = IsExecutiveEmployee,\n\t\tEmailId,\n\t\tTelNumber = TelephoneNumber,\n\t\tHomePhNumber = HomephoneNumber,\n\t\tPostalCode,\n\t\tPostalAddress,\n\t\tTerminationDate,\n\t\tIsActive,\n\t\tEmployeeType,\n\t\tCostCenter,\n\t\tCompanyName,\n\t\tDeptName = DepartmentName,\n\t\tDivName = DivisionName,\n\t\tSectName = SectionName,\n\t\tPostionName = PositionName,\n\t\tEESubArea = EmployeeSubArea,\n\t\tEESubGrpName = EESubGroupName,\n\t\tBranchName,\n\t\tUnitName,\n\t\tWPFullName = {WP.Full Name},\n\t\tWPEmail = {WP.Email},\n\t\tWrkLocDesc = WorkLocationDescription,\n\t\tMgrDispName = {Manager.DisplayName},\n\t\tMgrEmailId = {Manager.EmailId},\n\t\tSupDispName = {Supervisor.DisplayName},\n\t\tSupEmailId = {Supervisor.EmailId},\n\t\tEEGroupDesc = {EEGroup Description}\n\t),\n\tdateFormat:'yyyy-MM-dd',\n\ttimestampFormat:'yyyy.MM.dd HH:mm:ss',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HPTEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Health_Test",
				"activities": [
					{
						"name": "dataflow1_copy2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1_copy2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"HealthData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1_copy2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health Data_Flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"HealthData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDMS_Dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IDMS Data flow",
				"activities": [
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP Extraction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAP P&S Extraction",
				"activities": [
					{
						"name": "SAP PS Extraction",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": {
									"value": "EXTRACTION_DATE > '@{activity('Lookup1').output.firstRow.WatermarkValue}'",
									"type": "Expression"
								},
								"customRfcReadTableFunctionModule": "",
								"rfcTableFields": "ASTTX,AUART,AUFNR,BDMNG,BDTER,BLDAT,BWART,CHARG,CONSIGN,CPUDT,CREATED_DATE,CREATED_TIME,DFULL,DIFOT,DISPO,DOCUSR,ENMNG,ERDAT,FTRMI,KOSTL,LGORT,MAKTX,MANDT,MATNR,MBLNR,MCAB,MEINS,MENGE,MVGFREQ,NAMTX,NDAYS,ONHAND,ONHAND2,ONHAND3,ONTIME,QDATU,RELEA,RSNUM,RSPOS,TANUM,TSOH,UDATE,UDEPT,USNAM,WEMPF,WERKS,XLOEK,XWAOK,EXTRACTION_DATE",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[sapUpsertReservation]",
								"sqlWriterTableType": "TypRes2",
								"storedProcedureTableTypeParameterName": "Reservation",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RSNUM",
											"type": "String"
										},
										"sink": {
											"name": "Reservation Number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RSPOS",
											"type": "String"
										},
										"sink": {
											"name": "Reservation Item",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "USNAM",
											"type": "String"
										},
										"sink": {
											"name": "User name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BWART",
											"type": "String"
										},
										"sink": {
											"name": "Movement Type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BDTER",
											"type": "String"
										},
										"sink": {
											"name": "Requirement Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CPUDT",
											"type": "String"
										},
										"sink": {
											"name": "Account Doc Creation Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MBLNR",
											"type": "String"
										},
										"sink": {
											"name": "Material Document",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AUFNR",
											"type": "String"
										},
										"sink": {
											"name": "Order Number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MATNR",
											"type": "String"
										},
										"sink": {
											"name": "Material",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MEINS",
											"type": "String"
										},
										"sink": {
											"name": "Unit Of Measure",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MENGE",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "WEMPF",
											"type": "String"
										},
										"sink": {
											"name": "Goods Recipient",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MAKTX",
											"type": "String"
										},
										"sink": {
											"name": "Material Desc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BLDAT",
											"type": "String"
										},
										"sink": {
											"name": "Document Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DOCUSR",
											"type": "String"
										},
										"sink": {
											"name": "Document User",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UDEPT",
											"type": "String"
										},
										"sink": {
											"name": "Department",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WERKS",
											"type": "String"
										},
										"sink": {
											"name": "Plant",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NAMTX",
											"type": "String"
										},
										"sink": {
											"name": "Full name of Person",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TANUM",
											"type": "String"
										},
										"sink": {
											"name": "TO Doc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QDATU",
											"type": "String"
										},
										"sink": {
											"name": "TO Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NDAYS",
											"type": "Int32"
										},
										"sink": {
											"name": "No Days",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "BDMNG",
											"type": "Decimal"
										},
										"sink": {
											"name": "MR Qty",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ENMNG",
											"type": "Decimal"
										},
										"sink": {
											"name": "Final Issued Qty",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ONHAND",
											"type": "Decimal"
										},
										"sink": {
											"name": "SOH Batch",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "DFULL",
											"type": "String"
										},
										"sink": {
											"name": "Delivery in Full",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ONTIME",
											"type": "String"
										},
										"sink": {
											"name": "Delivery ontime",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DIFOT",
											"type": "String"
										},
										"sink": {
											"name": "DIFOT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "KOSTL",
											"type": "String"
										},
										"sink": {
											"name": "Cost Center",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "XLOEK",
											"type": "String"
										},
										"sink": {
											"name": "Item deleted",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "XWAOK",
											"type": "String"
										},
										"sink": {
											"name": "Mvt allowed",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LGORT",
											"type": "String"
										},
										"sink": {
											"name": "SLoc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CHARG",
											"type": "String"
										},
										"sink": {
											"name": "Batch",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AUART",
											"type": "String"
										},
										"sink": {
											"name": "Order type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ERDAT",
											"type": "String"
										},
										"sink": {
											"name": "Created Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ASTTX",
											"type": "String"
										},
										"sink": {
											"name": "User status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RELEA",
											"type": "String"
										},
										"sink": {
											"name": "Release",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FTRMI",
											"type": "String"
										},
										"sink": {
											"name": "Release date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UDATE",
											"type": "String"
										},
										"sink": {
											"name": "Unblock date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MVGFREQ",
											"type": "String"
										},
										"sink": {
											"name": "Moving Freq",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ONHAND2",
											"type": "Decimal"
										},
										"sink": {
											"name": "SOH SLoc",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "CONSIGN",
											"type": "Decimal"
										},
										"sink": {
											"name": "Consignment Stock",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "DISPO",
											"type": "String"
										},
										"sink": {
											"name": "MRP Controller",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MCAB",
											"type": "Decimal"
										},
										"sink": {
											"name": "MCAB",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TSOH",
											"type": "Decimal"
										},
										"sink": {
											"name": "SOH Plant",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ONHAND3",
											"type": "Decimal"
										},
										"sink": {
											"name": "SOH Company",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "CREATED_DATE",
											"type": "String"
										},
										"sink": {
											"name": "CREATED_DATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CREATED_TIME",
											"type": "String"
										},
										"sink": {
											"name": "CREATED_TIME",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SapTableResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP Incremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAP Incremental Load d",
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"HealthData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_ECC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SAP ECC",
				"activities": [
					{
						"name": "Copy_zlxx",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "EKKO"
							},
							{
								"name": "Destination",
								"value": "[[dbo].[ekko]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rowCount": 1000,
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "",
								"rfcTableFields": "ABGRU,ABSGR,ADDNR,ADRNR,AEDAT,ANGDT,ANGNR,AUREL_ALLOW,AUSNR,AUTLF,BEDAT,BNDDT,BSAKZ,BSART,BSTYP,BUDG_TYPE,BUKRS,BWBDT,CHECK_TYPE,CONTRACT_ALLOW,CON_DISTR_LEV,CON_OTB_REQ,CON_PREBOOK_LEV,DELPER_ALLOW,DESCRIPTION,DPAMT,DPDAT,DPPCT,DPTYP,EBELN,EINDT_ALLOW,EKGRP,EKGRP_ALLOW,EKORG,EQ_EINDT,EQ_WERKS,ERNAM,EXNUM,FIXPO,FIXPO_ALLOW,FORCE_CNT,FORCE_ID,FRGGR,FRGKE,FRGRL,FRGSX,FRGZU,GWLDT,HANDOVERLOC,HIERARCHY_EXISTS,IHRAN,IHREZ,INCO1,INCO2,KALSM,KDATB,KDATE,KEY_ID,KEY_ID_ALLOW,KNUMV,KONNR,KORNR,KTWRT,KUFIX,KUNNR,LANDS,LBLIF,LEGAL_CONTRACT,LIFNR,LIFRE,LLIEF,LOEKZ,LOGSY,LPHIS,LPONR,LTSNR_ALLOW,MANDT,MEMORY,MEMORYTYPE,MSR_ID,OTB_COND_TYPE,OTB_CURR,OTB_LEVEL,OTB_REASON,OTB_RES_VALUE,OTB_SPEC_VALUE,OTB_STATUS,OTB_VALUE,PINCR,POHF_TYPE,PROCSTAT,PSTYP_ALLOW,REASON_CODE,RELEASE_DATE,RELOC_ID,RELOC_SEQ_ID,RESWK,RETPC,RETTP,REVNO,RLWRT,SCMPROC,SHIPCOND,SOURCE_LOGSYS,SPRAS,SPR_RSN_PROFILE,STAFO,STAKO,STATU,STCEG,STCEG_L,SUBMI,TELF1,THRESHOLD_EXISTS,UNSEZ,UPINC,VERKF,VSART,VZSKZ,WAERS,WEAKT,WERKS_ALLOW,WKURS,ZBD1P,ZBD1T,ZBD2P,ZBD2T,ZBD3T,ZTERM",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EBELN",
											"type": "String"
										},
										"sink": {
											"name": "ebeln",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BUKRS",
											"type": "String"
										},
										"sink": {
											"name": "Company_Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BSTYP",
											"type": "String"
										},
										"sink": {
											"name": "Purchasing_Document_Category",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BSART",
											"type": "String"
										},
										"sink": {
											"name": "Purchasing_Document_Type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BSAKZ",
											"type": "String"
										},
										"sink": {
											"name": "Control_indicator",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LOEKZ",
											"type": "String"
										},
										"sink": {
											"name": "Deletion_Indicator",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "STATU",
											"type": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AEDAT",
											"type": "String"
										},
										"sink": {
											"name": "Created_on",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ERNAM",
											"type": "String"
										},
										"sink": {
											"name": "created_by",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EKORG",
											"type": "String"
										},
										"sink": {
											"name": "Purchasing_Org",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EKGRP",
											"type": "String"
										},
										"sink": {
											"name": "Purchasing_Grp",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WAERS",
											"type": "String"
										},
										"sink": {
											"name": "Currency_Key",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RLWRT",
											"type": "Decimal"
										},
										"sink": {
											"name": "Total_Value_at_release",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_zlx",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_zlx",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Travel Data Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Travel Data Trigger",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Travel Data Pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2020-04-27T02:15:00.000Z",
						"endTime": "2020-06-30T03:15:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health Data EOD')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Health Data EOD",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Health Data_Flow",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-04-27T15:59:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Health Data_Flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health Data Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Health Data Trigger",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Health Data_Flow",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 30,
						"startTime": "2020-04-27T02:15:00.000Z",
						"endTime": "2020-06-30T03:15:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Health Data_Flow')]"
			]
		}
	]
}