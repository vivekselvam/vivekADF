{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SAPECC"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Employee Personal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Employee Personal",
				"activities": [
					{
						"name": "Employee Personal - Pipeline",
						"description": "Employee Personal - Pipeline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Employee No",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Employee No",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Employee Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Employee Name",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Department",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Dependents",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dependents",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Education",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Education",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address",
											"type": "String",
											"physicalType": "char"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EmployeeBlob",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "EmployeePersonal",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health BOT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Rest Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['question_id']"
										},
										"sink": {
											"name": "Question_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['question_text']"
										},
										"sink": {
											"name": "Question_text",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['content']"
										},
										"sink": {
											"name": "Answer",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['started_at']"
										},
										"sink": {
											"name": "Started_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['completed_at']"
										},
										"sink": {
											"name": "Completed_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['id']"
										},
										"sink": {
											"name": "GUID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['respondent']['id']"
										},
										"sink": {
											"name": "Emp_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['respondent']['name']"
										},
										"sink": {
											"name": "Emp_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['respondent']['first_name']"
										},
										"sink": {
											"name": "First_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['responses'][0]['respondent']['last_name']"
										},
										"sink": {
											"name": "Last_name",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['responses'][0]['answers']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health Data Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Health Data",
						"description": "Health Data Pipeline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[Health_sto_proc]",
								"sqlWriterTableType": "TypHealth",
								"storedProcedureTableTypeParameterName": "Health"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tID",
											"type": "Guid"
										},
										"sink": {
											"name": "tID",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "tWorkplaceID",
											"type": "String"
										},
										"sink": {
											"name": "tWorkplaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tReadDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "tReadDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "tReadTime",
											"type": "TimeSpan"
										},
										"sink": {
											"name": "tReadtime",
											"type": "TimeSpan"
										}
									},
									{
										"source": {
											"name": "tTemperature",
											"type": "Decimal"
										},
										"sink": {
											"name": "tTemperature",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "tSymptoms",
											"type": "String"
										},
										"sink": {
											"name": "tSymptoms",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tRisks",
											"type": "String"
										},
										"sink": {
											"name": "tRisks",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tSeenDoc",
											"type": "String"
										},
										"sink": {
											"name": "tSeenDoc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tCreateDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "tCreateDateTime",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "WORKATO_HEALTH",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BOT_ANALYSIS_HEALTH",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"Datetime": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDMS O365 Pipelines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IDMS & o365 Data Pipeline",
				"activities": [
					{
						"name": "IDMS O365 Pipeline",
						"description": "IDMS O365 Pipeline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "restapi/Health And Travel/o365 Error Logs"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UserName",
											"type": "String"
										},
										"sink": {
											"name": "UserName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DisplayName",
											"type": "String"
										},
										"sink": {
											"name": "DisplayName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmployeeId",
											"type": "String"
										},
										"sink": {
											"name": "EmployeeId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsExecutiveEmployee",
											"type": "String"
										},
										"sink": {
											"name": "IsExecEmp",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmailId",
											"type": "String"
										},
										"sink": {
											"name": "EmailId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TelephoneNumber",
											"type": "String"
										},
										"sink": {
											"name": "TelNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HomephoneNumber",
											"type": "String"
										},
										"sink": {
											"name": "HomePhNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PostalCode",
											"type": "String"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PostalAddress",
											"type": "String"
										},
										"sink": {
											"name": "PostalAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TerminationDate",
											"type": "String"
										},
										"sink": {
											"name": "TerminationDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "IsActive",
											"type": "String"
										},
										"sink": {
											"name": "IsActive",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "String"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CostCenter",
											"type": "String"
										},
										"sink": {
											"name": "CostCenter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DepartmentName",
											"type": "String"
										},
										"sink": {
											"name": "DeptName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DivisionName",
											"type": "String"
										},
										"sink": {
											"name": "DivName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SectionName",
											"type": "String"
										},
										"sink": {
											"name": "SectName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PositionName",
											"type": "String"
										},
										"sink": {
											"name": "PostionName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmployeeSubArea",
											"type": "String"
										},
										"sink": {
											"name": "EESubArea",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EESubGroupName",
											"type": "String"
										},
										"sink": {
											"name": "EESubGrpName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BranchName",
											"type": "String"
										},
										"sink": {
											"name": "BranchName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UnitName",
											"type": "String"
										},
										"sink": {
											"name": "UnitName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WP.Full Name",
											"type": "String"
										},
										"sink": {
											"name": "WPFullName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WP.Email",
											"type": "String"
										},
										"sink": {
											"name": "WPEmail",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WorkLocationDescription",
											"type": "String"
										},
										"sink": {
											"name": "WrkLocDesc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Manager.DisplayName",
											"type": "String"
										},
										"sink": {
											"name": "MgrDispName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Manager.EmailId",
											"type": "String"
										},
										"sink": {
											"name": "MgrEmailId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supervisor.DisplayName",
											"type": "String"
										},
										"sink": {
											"name": "SupDispName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supervisor.EmailId",
											"type": "String"
										},
										"sink": {
											"name": "SupEmailId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EEGroup Description",
											"type": "String"
										},
										"sink": {
											"name": "EEGroupDesc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BU",
											"type": "String"
										},
										"sink": {
											"name": "BU",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "IDMS_Blob_Storage",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "IDMS_o365",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST_to_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('Upperlimit'),50)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set Lower Limit",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Lowerlimit",
										"value": {
											"value": "@variables('Upperlimit')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Upper Limit",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Upperlimit",
										"value": {
											"value": "@string(add(int(variables('Lowerlimit')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Lower Limit",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestResource1",
											"type": "DatasetReference",
											"parameters": {
												"url": {
													"value": "@variables('Lowerlimit')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Json1",
											"type": "DatasetReference",
											"parameters": {
												"starttime ": {
													"value": "@variables('Upperlimit')",
													"type": "Expression"
												},
												"endtime": {
													"value": "@variables('Lowerlimit')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.00:20:00"
						}
					}
				],
				"variables": {
					"Lowerlimit": {
						"type": "String",
						"defaultValue": "0"
					},
					"Upperlimit": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Send Email')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Send Email",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "IDMS_Blob_Storage",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-09.southeastasia.logic.azure.com:443/workflows/3713947e21834d359c94cdea99b72ffa/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=kwXFghPWbwv1zf0cjx6MLveuskmkIuhHSqPGbr50_nE",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\": \"PIPELINE RUN FINISHED\",\n \"message\": \"PIPELINE FINISHED RUNNING SUCCESSFULLY\",\n \"color\": \"Green\",\n \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n \"pipelineName\": \"@{pipeline().Pipeline}\",\n \"pipelineRunId\": \"@{pipeline().RunId}\",\n \"time\": \"@{convertTimeZone(utcnow(), 'UTC', 'Singapore Standard Time')}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Send Error Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-09.southeastasia.logic.azure.com:443/workflows/3713947e21834d359c94cdea99b72ffa/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=kwXFghPWbwv1zf0cjx6MLveuskmkIuhHSqPGbr50_nE",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\": \"PIPELINE RUN FAILED\",\n \"message\": \"@{activity('Copy data1').error.message}\",\n \"color\": \"Red\",\n \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n \"pipelineName\": \"@{pipeline().Pipeline}\",\n \"pipelineRunId\": \"@{pipeline().RunId}\",\n \"time\": \"@{convertTimeZone(utcnow(), 'UTC', 'Singapore Standard Time')}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Travel Data Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Travel Data Pipeline",
				"activities": [
					{
						"name": "Travel Data",
						"description": "Travel Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[Travel_sto_proc]",
								"sqlWriterTableType": "TypTravel",
								"storedProcedureTableTypeParameterName": "Travel"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "tTravelID",
											"type": "Guid"
										},
										"sink": {
											"name": "tTravelID",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "tWorkplaceID",
											"type": "String"
										},
										"sink": {
											"name": "tWorkplaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tTravelStatus",
											"type": "String"
										},
										"sink": {
											"name": "tTravelStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tTravelDestination",
											"type": "String"
										},
										"sink": {
											"name": "tTravelDestination",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tTravelStartDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "tTravelStartDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "tTravelEndDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "tTravelEndDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "tTravelRisk",
											"type": "String"
										},
										"sink": {
											"name": "tTravelRisk",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tTravelQuarantine",
											"type": "String"
										},
										"sink": {
											"name": "tTravelQuarantine",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tCreateDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "tCreateDateTime",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "WORK_ATO_TRAVEL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BOT_ANALYSIS_TRAVEL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "REST API to BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['stats']['showing']"
										},
										"sink": {
											"path": "$['stats']['showing']"
										}
									},
									{
										"source": {
											"path": "$['stats']['total']"
										},
										"sink": {
											"path": "$['stats']['total']"
										}
									},
									{
										"source": {
											"path": "$['stats']['completed']"
										},
										"sink": {
											"path": "$['stats']['completed']"
										}
									},
									{
										"source": {
											"path": "$['stats']['incomplete']"
										},
										"sink": {
											"path": "$['stats']['incomplete']"
										}
									},
									{
										"source": {
											"path": "$['questions'][0]['id']"
										},
										"sink": {
											"path": "$['questions_id']"
										}
									},
									{
										"source": {
											"path": "$['questions'][0]['question_type']"
										},
										"sink": {
											"path": "$['questions_question_type']"
										}
									},
									{
										"source": {
											"path": "$['questions'][0]['question_text']"
										},
										"sink": {
											"path": "$['questions_question_text']"
										}
									},
									{
										"source": {
											"path": "$['questions'][0]['question_position']"
										},
										"sink": {
											"path": "$['questions_question_position']"
										}
									},
									{
										"source": {
											"path": "[['completed']"
										},
										"sink": {
											"path": "$['responses_completed']"
										}
									},
									{
										"source": {
											"path": "[['started_at']"
										},
										"sink": {
											"path": "$['responses_started_at']"
										}
									},
									{
										"source": {
											"path": "[['completed_at']"
										},
										"sink": {
											"path": "$['responses_completed_at']"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"path": "$['responses_id']"
										}
									},
									{
										"source": {
											"path": "[['respondent']['id']"
										},
										"sink": {
											"path": "$['respondent_id']"
										}
									},
									{
										"source": {
											"path": "[['respondent']['name']"
										},
										"sink": {
											"path": "$['respondent_name']"
										}
									},
									{
										"source": {
											"path": "[['respondent']['first_name']"
										},
										"sink": {
											"path": "$['respondent_first_name']"
										}
									},
									{
										"source": {
											"path": "[['respondent']['last_name']"
										},
										"sink": {
											"path": "$['respondent_last_name']"
										}
									},
									{
										"source": {
											"path": "[['answers'][0]['question_id']"
										},
										"sink": {
											"path": "$['answers_question_id']"
										}
									},
									{
										"source": {
											"path": "[['answers'][0]['question_text']"
										},
										"sink": {
											"path": "$['answers_question_text']"
										}
									},
									{
										"source": {
											"path": "[['answers'][0]['content']"
										},
										"sink": {
											"path": "$['answers_content']"
										}
									}
								],
								"collectionReference": "$['responses']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {
									"url": "3"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {
									"starttime ": {
										"value": "@variables('Upperlimit')",
										"type": "Expression"
									},
									"endtime": {
										"value": "@variables('Lowerlimit')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"url": {
						"type": "string",
						"defaultValue": "/url"
					}
				},
				"variables": {
					"Lowerlimit": {
						"type": "String",
						"defaultValue": "0"
					},
					"Upperlimit": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapTableResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPED1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "YPS_STAGING"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_zlx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAPED1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "EKKO"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "WORKATO_HEALTH",
								"type": "DatasetReference"
							},
							"name": "HealthData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BOT_ANALYSIS_HEALTH",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "todayrecords1"
						}
					],
					"script": "source(output(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\ttTravelHistory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HealthData\ntodayrecords1 derive(concern = case(tSymptoms == 'Yes', 'Yes',tSeenDoc == 'Yes', 'Yes', tRisks == 'Yes', 'Yes', tTemperature >= 38.00, 'Yes', tTravelHistory == 'Yes', 'Yes','No')) ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(tID!='')) ~> AlterRow1\nHealthData filter(tReadDate > addDays(currentDate(), -1)) ~> todayrecords1\nAlterRow1 sink(input(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\tConcern as string,\n\t\ttTravelHistory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['tID'],\n\tformat: 'table',\n\tmapColumn(\n\t\ttID,\n\t\ttWorkplaceID,\n\t\ttReadDate,\n\t\ttReadTime,\n\t\ttTemperature,\n\t\ttSymptoms,\n\t\ttRisks,\n\t\ttSeenDoc,\n\t\ttCreateDateTime,\n\t\tConcern = concern,\n\t\ttTravelHistory\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1_copy2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "WORKATO_HEALTH",
								"type": "DatasetReference"
							},
							"name": "HealthData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TblHtest",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "Filter1"
						}
					],
					"script": "source(output(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\ttTravelHistory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HealthData\nFilter1 derive(concern = case(tSymptoms == 'Yes', 'Yes',tSeenDoc == 'Yes', 'Yes', tRisks == 'Yes', 'Yes', tTemperature >= 38.00, 'Yes','No')) ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(tID!='')) ~> AlterRow1\nHealthData filter(tReadDate > addDays(currentDate(), -1)) ~> Filter1\nAlterRow1 sink(input(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\tConcern as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['tID'],\n\tformat: 'table',\n\tmapColumn(\n\t\ttID,\n\t\ttWorkplaceID,\n\t\ttReadDate,\n\t\ttReadTime,\n\t\ttTemperature,\n\t\ttSymptoms,\n\t\ttRisks,\n\t\ttSeenDoc,\n\t\ttCreateDateTime,\n\t\tConcern = concern\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "IDMS_o365",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "IDMS_o365",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DeleteRows"
						}
					],
					"script": "source(output(\n\t\tUserName as string,\n\t\tDisplayName as string,\n\t\tEmployeeId as string,\n\t\tIsExecEmp as string,\n\t\tEmailId as string,\n\t\tTelNumber as string,\n\t\tHomePhNumber as string,\n\t\tPostalCode as string,\n\t\tPostalAddress as string,\n\t\tTerminationDate as date,\n\t\tIsActive as string,\n\t\tEmployeeType as string,\n\t\tCostCenter as string,\n\t\tCompanyName as string,\n\t\tDeptName as string,\n\t\tDivName as string,\n\t\tSectName as string,\n\t\tPostionName as string,\n\t\tEESubArea as string,\n\t\tEESubGrpName as string,\n\t\tBranchName as string,\n\t\tUnitName as string,\n\t\tWPFullName as string,\n\t\tWPEmail as string,\n\t\tWrkLocDesc as string,\n\t\tMgrDispName as string,\n\t\tMgrEmailId as string,\n\t\tSupDispName as string,\n\t\tSupEmailId as string,\n\t\tEEGroupDesc as string,\n\t\tBU as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 alterRow(deleteIf(UserName!=' ')) ~> DeleteRows\nDeleteRows sink(input(\n\t\tUserName as string,\n\t\tDisplayName as string,\n\t\tEmployeeId as string,\n\t\tIsExecEmp as string,\n\t\tEmailId as string,\n\t\tTelNumber as string,\n\t\tHomePhNumber as string,\n\t\tPostalCode as string,\n\t\tPostalAddress as string,\n\t\tTerminationDate as date,\n\t\tIsActive as string,\n\t\tEmployeeType as string,\n\t\tCostCenter as string,\n\t\tCompanyName as string,\n\t\tDeptName as string,\n\t\tDivName as string,\n\t\tSectName as string,\n\t\tPostionName as string,\n\t\tEESubArea as string,\n\t\tEESubGrpName as string,\n\t\tBranchName as string,\n\t\tUnitName as string,\n\t\tWPFullName as string,\n\t\tWPEmail as string,\n\t\tWrkLocDesc as string,\n\t\tMgrDispName as string,\n\t\tMgrEmailId as string,\n\t\tSupDispName as string,\n\t\tSupEmailId as string,\n\t\tEEGroupDesc as string,\n\t\tBU as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:true,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['UserName'],\n\tformat: 'table',\n\tmapColumn(\n\t\tUserName,\n\t\tDisplayName,\n\t\tEmployeeId,\n\t\tIsExecEmp,\n\t\tEmailId,\n\t\tTelNumber,\n\t\tHomePhNumber,\n\t\tPostalCode,\n\t\tPostalAddress,\n\t\tTerminationDate,\n\t\tIsActive,\n\t\tEmployeeType,\n\t\tCostCenter,\n\t\tCompanyName,\n\t\tDeptName,\n\t\tDivName,\n\t\tSectName,\n\t\tPostionName,\n\t\tEESubArea,\n\t\tEESubGrpName,\n\t\tBranchName,\n\t\tUnitName,\n\t\tWPFullName,\n\t\tWPEmail,\n\t\tWrkLocDesc,\n\t\tMgrDispName,\n\t\tMgrEmailId,\n\t\tSupDispName,\n\t\tSupEmailId,\n\t\tEEGroupDesc,\n\t\tBU\n\t),\n\tdateFormat:'yyyy-MM-dd',\n\ttimestampFormat:'yyyy.MM.dd HH:mm:ss',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2_IDMS_Exempt')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IDMS Dataflow for Exempted cols",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "IdMS_o365_WP_2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "IdMS_o365_WP_2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DeleteRows"
						}
					],
					"script": "source(output(\n\t\tUserName as string,\n\t\tDisplayName as string,\n\t\tEmployeeId as string,\n\t\tIsExecEmp as string,\n\t\tEmailId as string,\n\t\tTelNumber as string,\n\t\tHomePhNumber as string,\n\t\tPostalCode as string,\n\t\tPostalAddress as string,\n\t\tTerminationDate as date,\n\t\tIsActive as string,\n\t\tEmployeeType as string,\n\t\tCostCenter as string,\n\t\tCompanyName as string,\n\t\tDeptName as string,\n\t\tDivName as string,\n\t\tSectName as string,\n\t\tPostionName as string,\n\t\tEESubArea as string,\n\t\tEESubGrpName as string,\n\t\tBranchName as string,\n\t\tUnitName as string,\n\t\tWPFullName as string,\n\t\tWPEmail as string,\n\t\tWrkLocDesc as string,\n\t\tMgrDispName as string,\n\t\tMgrEmailId as string,\n\t\tSupDispName as string,\n\t\tSupEmailId as string,\n\t\tEEGroupDesc as string,\n\t\tBU as string,\n\t\tIsExempted as string,\n\t\tExemptedFrom as date,\n\t\tExemptedTo as date,\n\t\tReason as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 alterRow(deleteIf(UserName!=' ')) ~> DeleteRows\nDeleteRows sink(input(\n\t\tUserName as string,\n\t\tDisplayName as string,\n\t\tEmployeeId as string,\n\t\tIsExecEmp as string,\n\t\tEmailId as string,\n\t\tTelNumber as string,\n\t\tHomePhNumber as string,\n\t\tPostalCode as string,\n\t\tPostalAddress as string,\n\t\tTerminationDate as date,\n\t\tIsActive as string,\n\t\tEmployeeType as string,\n\t\tCostCenter as string,\n\t\tCompanyName as string,\n\t\tDeptName as string,\n\t\tDivName as string,\n\t\tSectName as string,\n\t\tPostionName as string,\n\t\tEESubArea as string,\n\t\tEESubGrpName as string,\n\t\tBranchName as string,\n\t\tUnitName as string,\n\t\tWPFullName as string,\n\t\tWPEmail as string,\n\t\tWrkLocDesc as string,\n\t\tMgrDispName as string,\n\t\tMgrEmailId as string,\n\t\tSupDispName as string,\n\t\tSupEmailId as string,\n\t\tEEGroupDesc as string,\n\t\tBU as string,\n\t\tIsExempted as string,\n\t\tExemptedFrom as date,\n\t\tExemptedTo as date,\n\t\tReason as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:true,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['UserName'],\n\tformat: 'table',\n\tmapColumn(\n\t\tUserName,\n\t\tDisplayName,\n\t\tEmployeeId,\n\t\tIsExecEmp,\n\t\tEmailId,\n\t\tTelNumber,\n\t\tHomePhNumber,\n\t\tPostalCode,\n\t\tPostalAddress,\n\t\tTerminationDate,\n\t\tIsActive,\n\t\tEmployeeType,\n\t\tCostCenter,\n\t\tCompanyName,\n\t\tDeptName,\n\t\tDivName,\n\t\tSectName,\n\t\tPostionName,\n\t\tEESubArea,\n\t\tEESubGrpName,\n\t\tBranchName,\n\t\tUnitName,\n\t\tWPFullName,\n\t\tWPEmail,\n\t\tWrkLocDesc,\n\t\tMgrDispName,\n\t\tMgrEmailId,\n\t\tSupDispName,\n\t\tSupEmailId,\n\t\tEEGroupDesc,\n\t\tBU,\n\t\tIsExempted,\n\t\tExemptedFrom,\n\t\tExemptedTo,\n\t\tReason\n\t),\n\tdateFormat:'yyyy-MM-dd',\n\ttimestampFormat:'yyyy.MM.dd HH:mm:ss',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1_test_migration')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Test Migration",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "WORKATO_HEALTH",
								"type": "DatasetReference"
							},
							"name": "HealthData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HealthTableTest",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "todayrecords1"
						}
					],
					"script": "source(output(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\ttTravelHistory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HealthData\ntodayrecords1 derive(concern = case(tSymptoms == 'Yes', 'Yes',tSeenDoc == 'Yes', 'Yes', tRisks == 'Yes', 'Yes', tTemperature >= 38.00, 'Yes', tTravelHistory == 'Yes', 'Yes','No')) ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(tID!='')) ~> AlterRow1\nHealthData filter(tReadDate > minus(toDate('2020-12-14'), 1)) ~> todayrecords1\nAlterRow1 sink(input(\n\t\ttID as string,\n\t\ttWorkplaceID as string,\n\t\ttReadDate as date,\n\t\ttReadTime as timestamp,\n\t\ttTemperature as decimal(5,2),\n\t\ttSymptoms as string,\n\t\ttRisks as string,\n\t\ttSeenDoc as string,\n\t\ttCreateDateTime as timestamp,\n\t\tConcern as string,\n\t\ttTravelHistory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['tID'],\n\tformat: 'table',\n\tmapColumn(\n\t\ttID,\n\t\ttWorkplaceID,\n\t\ttReadDate,\n\t\ttReadTime,\n\t\ttTemperature,\n\t\ttSymptoms,\n\t\ttRisks,\n\t\ttSeenDoc,\n\t\ttCreateDateTime,\n\t\tConcern = concern,\n\t\ttTravelHistory\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HPTEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Health_Test",
				"activities": [
					{
						"name": "dataflow1_copy2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1_copy2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"HealthData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1_copy2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Health Data_Flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Health Data Flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"HealthData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDMS Dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IDMS O365 Dataflow",
				"activities": [
					{
						"name": "Update O365 IDMS Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "O365 dataflow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Health And Travel/o365 And IDMS Files/Latest File",
									"wildcardFileName": "*csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "restapi/Health And Travel/o365 Error Logs"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DisplayName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DisplayName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsExecutiveEmployee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsExecEmp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmailId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TelephoneNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TelNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomephoneNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomePhNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostalAddress",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PostalAddress",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TerminationDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TerminationDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "IsActive",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsActive",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CostCenter",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CostCenter",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DepartmentName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeptName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DivisionName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DivName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SectionName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SectName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PositionName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PostionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeSubArea",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EESubArea",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EESubGroupName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EESubGrpName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UnitName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UnitName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WP.Full Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WPFullName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WP.Email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WPEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkLocationDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WrkLocDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Manager.DisplayName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MgrDispName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Manager.EmailId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MgrEmailId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supervisor.DisplayName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SupDispName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supervisor.EmailId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SupEmailId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EEGroup Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EEGroupDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BU",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "o365_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "IDMS_Test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "O365 dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Check Files Exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Check Files Exists",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "o365_Data",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:01:60",
							"sleep": 60,
							"childItems": true
						}
					}
				],
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDMS Dataflow_Exempt_cols')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IDMS O365 Dataflow with Exempted columns",
				"activities": [
					{
						"name": "Update O365 IDMS Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "O365 dataflow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Health And Travel/o365 And IDMS Files/IDMS O365 Exempted cols",
									"wildcardFileName": "*csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "restapi/Health And Travel/o365 Error Logs"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DisplayName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DisplayName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsExecutiveEmployee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsExecEmp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmailId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TelephoneNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TelNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomephoneNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomePhNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostalAddress",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PostalAddress",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TerminationDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TerminationDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "IsActive",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsActive",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CostCenter",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CostCenter",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DepartmentName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeptName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DivisionName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DivName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SectionName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SectName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PositionName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PostionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeSubArea",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EESubArea",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EESubGroupName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EESubGrpName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BranchName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UnitName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UnitName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WP.Full Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WPFullName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WP.Email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WPEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkLocationDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WrkLocDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Manager.DisplayName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MgrDispName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Manager.EmailId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MgrEmailId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supervisor.DisplayName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SupDispName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Supervisor.EmailId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SupEmailId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EEGroup Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EEGroupDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BU",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BU",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsExempted",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsExempted",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Exempted From",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExemptedFrom",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Exempted To",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExemptedTo",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Reason",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "o365_Data_BLOB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "IdMS_o365_WP_2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "O365 dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Check Files Exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2_IDMS_Exempt",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Check Files Exists",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "o365_Data_BLOB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:01:60",
							"sleep": 60,
							"childItems": true
						}
					}
				],
				"folder": {
					"name": "BOT Analysis"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2_IDMS_Exempt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IDMS_Dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "IDMS Data flow",
				"activities": [
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		}
	]
}